{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs12\cgrid \sbasedon0 \snext0 heading 6;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\*\listtable
{\list\listtemplateid1
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8226 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u8662 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9702 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9642 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid1}
{\list\listtemplateid2
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9744 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid2}
{\list\listtemplateid3
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li360 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li720 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1080 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1440 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li1800 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2160 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2520 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li2880 }
{ \listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9746 ?;}{\levelnumbers;}\f8\dbch\af3\fi-360\li3600 }
\listid3}
}
{\listoverridetable
{\listoverride\listid1\listoverridecount0\ls1}
{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}
}
{\info 
{\title {\comment cppMD01 }cppMD01}
{\comment Generated by doxygen 1.11.0.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt cppMD01}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
bcsGui\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
curlStuff\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
wxApp
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
cppMD01App\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
wxDialog
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
dlgDe01\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dlgNb01\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dlgNewCat\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dlgNewLink\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dlgSelDB\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dlgXqt2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
wxFrame
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
cppMD01Frame\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
zDB01\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b bcsGui} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01App} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01Frame} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b curlStuff} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgDe01} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNb01} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewCat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewLink} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgSelDB} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgXqt2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b zDB01} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b bcsGui.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b bcsGui.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01App.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01App.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01Main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cppMD01Main.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b curlStuff.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b curlStuff.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgDe01.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgDe01.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNb01.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNb01.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewCat.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewCat.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewLink.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgNewLink.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgSelDB.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgSelDB.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgXqt2.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dlgXqt2.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b zDB01.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b zDB01.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bcsGui Class Reference\par \pard\plain 
{\tc\tcl2 \v bcsGui}
{\xe \v bcsGui}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par
{
{\f2 #include <bcsGui.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcsGui} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~bcsGui} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b SelDir} (string initDir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetText} (bool memo, string initVal, string prompt, string caption)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yornQues} (string caption, string prompt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b openFileDialog} (wxWindow *parent, const wxString &message, const wxString &defaultDir, const wxString &defaultFile, const wxString &wildcard, int flags)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 7} of file {\b bcsGui.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v bcsGui\:bcsGui}
{\xe \v bcsGui\:bcsGui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bcsGui::bcsGui ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b bcsGui.cpp}.}\par
}
{\xe \v ~bcsGui\:bcsGui}
{\xe \v bcsGui\:~bcsGui}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bcsGui::~bcsGui (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b bcsGui.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetText\:bcsGui}
{\xe \v bcsGui\:GetText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string bcsGui::GetText (bool memo, string initVal, string prompt, string caption)}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b bcsGui.cpp}.}\par
}
{\xe \v openFileDialog\:bcsGui}
{\xe \v bcsGui\:openFileDialog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string bcsGui::openFileDialog (wxWindow * parent, const wxString & message, const wxString & defaultDir, const wxString & defaultFile, const wxString & wildcard, int flags)}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b bcsGui.cpp}.}\par
}
{\xe \v SelDir\:bcsGui}
{\xe \v bcsGui\:SelDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string bcsGui::SelDir (string initDir)}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b bcsGui.cpp}.}\par
}
{\xe \v yornQues\:bcsGui}
{\xe \v bcsGui\:yornQues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bcsGui::yornQues (string caption, string prompt)}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b bcsGui.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcsGui.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcsGui.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01App Class Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01App}
{\xe \v cppMD01App}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
{\f2 #include <cppMD01App.h>}}\par
Inheritance diagram for cppMD01App:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcpp_m_d01_app.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b OnInit} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 15} of file {\b cppMD01App.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v OnInit\:cppMD01App}
{\xe \v cppMD01App\:OnInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool cppMD01App::OnInit (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b cppMD01App.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cppMD01App.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cppMD01App.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01Frame Class Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01Frame}
{\xe \v cppMD01Frame}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\par
{
{\f2 #include <cppMD01Main.h>}}\par
Inheritance diagram for cppMD01Frame:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcpp_m_d01_frame.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cppMD01Frame} (wxWindow *parent, wxWindowID id=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~cppMD01Frame} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mysqlpp::Connection {\b conn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxGrid * {\b masterGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxGrid * {\b detailGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b cmd}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b mkVal}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 26} of file {\b cppMD01Main.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v cppMD01Frame\:cppMD01Frame}
{\xe \v cppMD01Frame\:cppMD01Frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cppMD01Frame::cppMD01Frame (wxWindow * parent, wxWindowID id = {\f2 -1})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b cppMD01Main.cpp}.}\par
}
{\xe \v ~cppMD01Frame\:cppMD01Frame}
{\xe \v cppMD01Frame\:~cppMD01Frame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
cppMD01Frame::~cppMD01Frame (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 230} of file {\b cppMD01Main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cmd\:cppMD01Frame}
{\xe \v cppMD01Frame\:cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string cppMD01Frame::cmd}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b cppMD01Main.h}.}\par
}
{\xe \v conn\:cppMD01Frame}
{\xe \v cppMD01Frame\:conn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mysqlpp::Connection cppMD01Frame::conn}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b cppMD01Main.h}.}\par
}
{\xe \v detailGrid\:cppMD01Frame}
{\xe \v cppMD01Frame\:detailGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxGrid* cppMD01Frame::detailGrid}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b cppMD01Main.h}.}\par
}
{\xe \v masterGrid\:cppMD01Frame}
{\xe \v cppMD01Frame\:masterGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxGrid* cppMD01Frame::masterGrid}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b cppMD01Main.h}.}\par
}
{\xe \v mkVal\:cppMD01Frame}
{\xe \v cppMD01Frame\:mkVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string cppMD01Frame::mkVal}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b cppMD01Main.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cppMD01Main.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b cppMD01Main.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
curlStuff Class Reference\par \pard\plain 
{\tc\tcl2 \v curlStuff}
{\xe \v curlStuff}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\f2 #include <curlStuff.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b curlStuff} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~curlStuff} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getZTitle} (std::string url)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b clipUrl} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getURL} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b cbc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 6} of file {\b curlStuff.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v curlStuff\:curlStuff}
{\xe \v curlStuff\:curlStuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
curlStuff::curlStuff ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b curlStuff.cpp}.}\par
}
{\xe \v ~curlStuff\:curlStuff}
{\xe \v curlStuff\:~curlStuff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
curlStuff::~curlStuff (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b curlStuff.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v clipUrl\:curlStuff}
{\xe \v curlStuff\:clipUrl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string curlStuff::clipUrl ()}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b curlStuff.cpp}.}\par
}
{\xe \v getURL\:curlStuff}
{\xe \v curlStuff\:getURL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string curlStuff::getURL ()}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 169} of file {\b curlStuff.cpp}.}\par
}
{\xe \v getZTitle\:curlStuff}
{\xe \v curlStuff\:getZTitle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string curlStuff::getZTitle (std::string url)}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b curlStuff.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v cbc\:curlStuff}
{\xe \v curlStuff\:cbc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string curlStuff::cbc}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b curlStuff.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b curlStuff.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b curlStuff.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgDe01 Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgDe01}
{\xe \v dlgDe01}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\par
{
{\f2 #include <dlgDe01.h>}}\par
Inheritance diagram for dlgDe01:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_de01.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgDe01} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgDe01} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b StaticText1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b StaticText2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b TextCtrl1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b TextCtrl2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL2} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b dlgDe01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgDe01\:dlgDe01}
{\xe \v dlgDe01\:dlgDe01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgDe01::dlgDe01 (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dlgDe01.cpp}.}\par
}
{\xe \v ~dlgDe01\:dlgDe01}
{\xe \v dlgDe01\:~dlgDe01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgDe01::~dlgDe01 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b dlgDe01.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ID_STATICTEXT1\:dlgDe01}
{\xe \v dlgDe01\:ID_STATICTEXT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgDe01::ID_STATICTEXT1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b dlgDe01.h}.}\par
}
{\xe \v ID_STATICTEXT2\:dlgDe01}
{\xe \v dlgDe01\:ID_STATICTEXT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgDe01::ID_STATICTEXT2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b dlgDe01.h}.}\par
}
{\xe \v ID_TEXTCTRL1\:dlgDe01}
{\xe \v dlgDe01\:ID_TEXTCTRL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgDe01::ID_TEXTCTRL1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b dlgDe01.h}.}\par
}
{\xe \v ID_TEXTCTRL2\:dlgDe01}
{\xe \v dlgDe01\:ID_TEXTCTRL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgDe01::ID_TEXTCTRL2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b dlgDe01.h}.}\par
}
{\xe \v StaticText1\:dlgDe01}
{\xe \v dlgDe01\:StaticText1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgDe01::StaticText1}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b dlgDe01.h}.}\par
}
{\xe \v StaticText2\:dlgDe01}
{\xe \v dlgDe01\:StaticText2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgDe01::StaticText2}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dlgDe01.h}.}\par
}
{\xe \v TextCtrl1\:dlgDe01}
{\xe \v dlgDe01\:TextCtrl1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgDe01::TextCtrl1}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dlgDe01.h}.}\par
}
{\xe \v TextCtrl2\:dlgDe01}
{\xe \v dlgDe01\:TextCtrl2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgDe01::TextCtrl2}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b dlgDe01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgDe01.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgDe01.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNb01 Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgNb01}
{\xe \v dlgNb01}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
{
{\f2 #include <dlgNb01.h>}}\par
Inheritance diagram for dlgNb01:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_nb01.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNb01} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgNb01} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b curCat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxListBox * {\b lbxCats}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxListBox * {\b lbxLinks}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxNotebook * {\b nbk01}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxPanel * {\b Panel1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxPanel * {\b Panel2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_LISTBOX1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_PANEL1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_LISTBOX2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_PANEL2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_NOTEBOOK1} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b dlgNb01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgNb01\:dlgNb01}
{\xe \v dlgNb01\:dlgNb01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNb01::dlgNb01 (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b dlgNb01.cpp}.}\par
}
{\xe \v ~dlgNb01\:dlgNb01}
{\xe \v dlgNb01\:~dlgNb01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNb01::~dlgNb01 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b dlgNb01.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v curCat\:dlgNb01}
{\xe \v dlgNb01\:curCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dlgNb01::curCat}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b dlgNb01.h}.}\par
}
{\xe \v ID_LISTBOX1\:dlgNb01}
{\xe \v dlgNb01\:ID_LISTBOX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNb01::ID_LISTBOX1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b dlgNb01.h}.}\par
}
{\xe \v ID_LISTBOX2\:dlgNb01}
{\xe \v dlgNb01\:ID_LISTBOX2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNb01::ID_LISTBOX2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b dlgNb01.h}.}\par
}
{\xe \v ID_NOTEBOOK1\:dlgNb01}
{\xe \v dlgNb01\:ID_NOTEBOOK1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNb01::ID_NOTEBOOK1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b dlgNb01.h}.}\par
}
{\xe \v ID_PANEL1\:dlgNb01}
{\xe \v dlgNb01\:ID_PANEL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNb01::ID_PANEL1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b dlgNb01.h}.}\par
}
{\xe \v ID_PANEL2\:dlgNb01}
{\xe \v dlgNb01\:ID_PANEL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNb01::ID_PANEL2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b dlgNb01.h}.}\par
}
{\xe \v lbxCats\:dlgNb01}
{\xe \v dlgNb01\:lbxCats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxListBox* dlgNb01::lbxCats}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dlgNb01.h}.}\par
}
{\xe \v lbxLinks\:dlgNb01}
{\xe \v dlgNb01\:lbxLinks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxListBox* dlgNb01::lbxLinks}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b dlgNb01.h}.}\par
}
{\xe \v nbk01\:dlgNb01}
{\xe \v dlgNb01\:nbk01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxNotebook* dlgNb01::nbk01}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b dlgNb01.h}.}\par
}
{\xe \v Panel1\:dlgNb01}
{\xe \v dlgNb01\:Panel1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxPanel* dlgNb01::Panel1}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b dlgNb01.h}.}\par
}
{\xe \v Panel2\:dlgNb01}
{\xe \v dlgNb01\:Panel2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxPanel* dlgNb01::Panel2}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b dlgNb01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNb01.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNb01.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewCat Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewCat}
{\xe \v dlgNewCat}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\f2 #include <dlgNewCat.h>}}\par
Inheritance diagram for dlgNewCat:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_new_cat.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewCat} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgNewCat} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxButton * {\b btnCancel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxButton * {\b btnInsert}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lblCat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lblMemo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtCat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtMemo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_BUTTON1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_BUTTON2} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b dlgNewCat.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgNewCat\:dlgNewCat}
{\xe \v dlgNewCat\:dlgNewCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNewCat::dlgNewCat (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b dlgNewCat.cpp}.}\par
}
{\xe \v ~dlgNewCat\:dlgNewCat}
{\xe \v dlgNewCat\:~dlgNewCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNewCat::~dlgNewCat (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b dlgNewCat.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v btnCancel\:dlgNewCat}
{\xe \v dlgNewCat\:btnCancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxButton* dlgNewCat::btnCancel}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dlgNewCat.h}.}\par
}
{\xe \v btnInsert\:dlgNewCat}
{\xe \v dlgNewCat\:btnInsert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxButton* dlgNewCat::btnInsert}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dlgNewCat.h}.}\par
}
{\xe \v edtCat\:dlgNewCat}
{\xe \v dlgNewCat\:edtCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewCat::edtCat}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b dlgNewCat.h}.}\par
}
{\xe \v edtMemo\:dlgNewCat}
{\xe \v dlgNewCat\:edtMemo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewCat::edtMemo}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_BUTTON1\:dlgNewCat}
{\xe \v dlgNewCat\:ID_BUTTON1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_BUTTON1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_BUTTON2\:dlgNewCat}
{\xe \v dlgNewCat\:ID_BUTTON2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_BUTTON2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_STATICTEXT1\:dlgNewCat}
{\xe \v dlgNewCat\:ID_STATICTEXT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_STATICTEXT1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_STATICTEXT2\:dlgNewCat}
{\xe \v dlgNewCat\:ID_STATICTEXT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_STATICTEXT2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_TEXTCTRL1\:dlgNewCat}
{\xe \v dlgNewCat\:ID_TEXTCTRL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_TEXTCTRL1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b dlgNewCat.h}.}\par
}
{\xe \v ID_TEXTCTRL2\:dlgNewCat}
{\xe \v dlgNewCat\:ID_TEXTCTRL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewCat::ID_TEXTCTRL2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b dlgNewCat.h}.}\par
}
{\xe \v lblCat\:dlgNewCat}
{\xe \v dlgNewCat\:lblCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewCat::lblCat}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b dlgNewCat.h}.}\par
}
{\xe \v lblMemo\:dlgNewCat}
{\xe \v dlgNewCat\:lblMemo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewCat::lblMemo}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b dlgNewCat.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewCat.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewCat.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewLink Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewLink}
{\xe \v dlgNewLink}
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
\par
{
{\f2 #include <dlgNewLink.h>}}\par
Inheritance diagram for dlgNewLink:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_new_link.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewLink} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgNewLink} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxButton * {\b btnCancel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxButton * {\b btnInset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lblDet}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lblLink}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lblidlk1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxStaticText * {\b lnlLinkName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtDetDes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtLink}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtLinkName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxTextCtrl * {\b edtPrim}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL2} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT3} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL3} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_STATICTEXT4} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_TEXTCTRL4} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_BUTTON1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_BUTTON2} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 12} of file {\b dlgNewLink.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgNewLink\:dlgNewLink}
{\xe \v dlgNewLink\:dlgNewLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNewLink::dlgNewLink (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
zrdb.initField(mkVal,dlg.edtPrim);\par
}{
Definition at line {\b 31} of file {\b dlgNewLink.cpp}.}\par
}
{\xe \v ~dlgNewLink\:dlgNewLink}
{\xe \v dlgNewLink\:~dlgNewLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgNewLink::~dlgNewLink (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b dlgNewLink.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v btnCancel\:dlgNewLink}
{\xe \v dlgNewLink\:btnCancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxButton* dlgNewLink::btnCancel}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dlgNewLink.h}.}\par
}
{\xe \v btnInset\:dlgNewLink}
{\xe \v dlgNewLink\:btnInset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxButton* dlgNewLink::btnInset}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dlgNewLink.h}.}\par
}
{\xe \v edtDetDes\:dlgNewLink}
{\xe \v dlgNewLink\:edtDetDes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewLink::edtDetDes}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b dlgNewLink.h}.}\par
}
{\xe \v edtLink\:dlgNewLink}
{\xe \v dlgNewLink\:edtLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewLink::edtLink}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b dlgNewLink.h}.}\par
}
{\xe \v edtLinkName\:dlgNewLink}
{\xe \v dlgNewLink\:edtLinkName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewLink::edtLinkName}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b dlgNewLink.h}.}\par
}
{\xe \v edtPrim\:dlgNewLink}
{\xe \v dlgNewLink\:edtPrim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxTextCtrl* dlgNewLink::edtPrim}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_BUTTON1\:dlgNewLink}
{\xe \v dlgNewLink\:ID_BUTTON1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_BUTTON1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_BUTTON2\:dlgNewLink}
{\xe \v dlgNewLink\:ID_BUTTON2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_BUTTON2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_STATICTEXT1\:dlgNewLink}
{\xe \v dlgNewLink\:ID_STATICTEXT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_STATICTEXT1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_STATICTEXT2\:dlgNewLink}
{\xe \v dlgNewLink\:ID_STATICTEXT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_STATICTEXT2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_STATICTEXT3\:dlgNewLink}
{\xe \v dlgNewLink\:ID_STATICTEXT3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_STATICTEXT3 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_STATICTEXT4\:dlgNewLink}
{\xe \v dlgNewLink\:ID_STATICTEXT4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_STATICTEXT4 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_TEXTCTRL1\:dlgNewLink}
{\xe \v dlgNewLink\:ID_TEXTCTRL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_TEXTCTRL1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_TEXTCTRL2\:dlgNewLink}
{\xe \v dlgNewLink\:ID_TEXTCTRL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_TEXTCTRL2 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_TEXTCTRL3\:dlgNewLink}
{\xe \v dlgNewLink\:ID_TEXTCTRL3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_TEXTCTRL3 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b dlgNewLink.h}.}\par
}
{\xe \v ID_TEXTCTRL4\:dlgNewLink}
{\xe \v dlgNewLink\:ID_TEXTCTRL4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgNewLink::ID_TEXTCTRL4 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b dlgNewLink.h}.}\par
}
{\xe \v lblDet\:dlgNewLink}
{\xe \v dlgNewLink\:lblDet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewLink::lblDet}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b dlgNewLink.h}.}\par
}
{\xe \v lblidlk1\:dlgNewLink}
{\xe \v dlgNewLink\:lblidlk1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewLink::lblidlk1}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b dlgNewLink.h}.}\par
}
{\xe \v lblLink\:dlgNewLink}
{\xe \v dlgNewLink\:lblLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewLink::lblLink}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b dlgNewLink.h}.}\par
}
{\xe \v lnlLinkName\:dlgNewLink}
{\xe \v dlgNewLink\:lnlLinkName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxStaticText* dlgNewLink::lnlLinkName}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b dlgNewLink.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewLink.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgNewLink.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgSelDB Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgSelDB}
{\xe \v dlgSelDB}
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
\par
{
{\f2 #include <dlgSelDB.h>}}\par
Inheritance diagram for dlgSelDB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_sel_d_b.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgSelDB} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgSelDB} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b buf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxListBox * {\b lbxDbNames}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_LISTBOX1} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 10} of file {\b dlgSelDB.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgSelDB\:dlgSelDB}
{\xe \v dlgSelDB\:dlgSelDB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgSelDB::dlgSelDB (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b dlgSelDB.cpp}.}\par
}
{\xe \v ~dlgSelDB\:dlgSelDB}
{\xe \v dlgSelDB\:~dlgSelDB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgSelDB::~dlgSelDB (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b dlgSelDB.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v buf\:dlgSelDB}
{\xe \v dlgSelDB\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string dlgSelDB::buf}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b dlgSelDB.h}.}\par
}
{\xe \v ID_LISTBOX1\:dlgSelDB}
{\xe \v dlgSelDB\:ID_LISTBOX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgSelDB::ID_LISTBOX1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b dlgSelDB.h}.}\par
}
{\xe \v lbxDbNames\:dlgSelDB}
{\xe \v dlgSelDB\:lbxDbNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxListBox* dlgSelDB::lbxDbNames}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b dlgSelDB.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgSelDB.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgSelDB.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgXqt2 Class Reference\par \pard\plain 
{\tc\tcl2 \v dlgXqt2}
{\xe \v dlgXqt2}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
{
{\f2 #include <dlgXqt2.h>}}\par
Inheritance diagram for dlgXqt2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdlg_xqt2.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgXqt2} (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~dlgXqt2} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxButton * {\b butCancel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxRadioBox * {\b rbtRadBut}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Protected Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_RADIOBOX1} = wxNewId()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const long {\b ID_BUTTON1} = wxNewId()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 11} of file {\b dlgXqt2.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v dlgXqt2\:dlgXqt2}
{\xe \v dlgXqt2\:dlgXqt2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgXqt2::dlgXqt2 (wxWindow * parent, wxWindowID id = {\f2 wxID_ANY}, const wxPoint & pos = {\f2 wxDefaultPosition}, const wxSize & size = {\f2 wxDefaultSize})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b dlgXqt2.cpp}.}\par
}
{\xe \v ~dlgXqt2\:dlgXqt2}
{\xe \v dlgXqt2\:~dlgXqt2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dlgXqt2::~dlgXqt2 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b dlgXqt2.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v butCancel\:dlgXqt2}
{\xe \v dlgXqt2\:butCancel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxButton* dlgXqt2::butCancel}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b dlgXqt2.h}.}\par
}
{\xe \v ID_BUTTON1\:dlgXqt2}
{\xe \v dlgXqt2\:ID_BUTTON1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgXqt2::ID_BUTTON1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b dlgXqt2.h}.}\par
}
{\xe \v ID_RADIOBOX1\:dlgXqt2}
{\xe \v dlgXqt2\:ID_RADIOBOX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const long dlgXqt2::ID_RADIOBOX1 = wxNewId(){\f2 [static]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b dlgXqt2.h}.}\par
}
{\xe \v isel\:dlgXqt2}
{\xe \v dlgXqt2\:isel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dlgXqt2::isel}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b dlgXqt2.h}.}\par
}
{\xe \v rbtRadBut\:dlgXqt2}
{\xe \v dlgXqt2\:rbtRadBut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxRadioBox* dlgXqt2::rbtRadBut}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b dlgXqt2.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgXqt2.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b dlgXqt2.cpp}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zDB01 Class Reference\par \pard\plain 
{\tc\tcl2 \v zDB01}
{\xe \v zDB01}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
\par
{
{\f2 #include <zDB01.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~zDB01} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listDatabases} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b selDB} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b de01} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initField} (std::string inputValue, wxTextCtrl *field)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b fieldToString} (wxTextCtrl *field)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b nb01} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listCategories} (bool idPrim)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listLinks} (int curCat, bool dRID)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLink} (int curCat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b listLk1Lk2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertCat} (std::string cat, std::string memo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insertLink} (std::string idlk1, std::string lkn, std::string lnk, std::string ddes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeleteLink} (std::string delId)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b editLink} (std::string delId, std::string idkl2, std::string ilk, std::string lnk, std::string ddes, std::string idlk1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b editCat} (std::string idlk1, std::string cat, std::string memo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getCat} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxArrayString {\b dbn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxArrayString {\b lk1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxArrayString {\b lk2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxArrayString {\b lk3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxString {\b db}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b curDB}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
mysqlpp::StoreQueryResult {\b zres}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b strIdlk1} = "43"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b insertMode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b database} = "bcswebtools"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b server} = "localhost"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b user} = "bcs"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b password} = "Peace007!amb"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 9} of file {\b zDB01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v zDB01\:zDB01}
{\xe \v zDB01\:zDB01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
zDB01::zDB01 ()}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b zDB01.cpp}.}\par
}
{\xe \v ~zDB01\:zDB01}
{\xe \v zDB01\:~zDB01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
zDB01::~zDB01 (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b zDB01.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v de01\:zDB01}
{\xe \v zDB01\:de01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::de01 ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 283} of file {\b zDB01.cpp}.}\par
}
{\xe \v DeleteLink\:zDB01}
{\xe \v zDB01\:DeleteLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::DeleteLink (std::string delId)}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 392} of file {\b zDB01.cpp}.}\par
}
{\xe \v editCat\:zDB01}
{\xe \v zDB01\:editCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::editCat (std::string idlk1, std::string cat, std::string memo)}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 367} of file {\b zDB01.cpp}.}\par
}
{\xe \v editLink\:zDB01}
{\xe \v zDB01\:editLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::editLink (std::string delId, std::string idkl2, std::string ilk, std::string lnk, std::string ddes, std::string idlk1)}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 403} of file {\b zDB01.cpp}.}\par
}
{\xe \v fieldToString\:zDB01}
{\xe \v zDB01\:fieldToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string zDB01::fieldToString (wxTextCtrl * field)}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 275} of file {\b zDB01.cpp}.}\par
}
{\xe \v getCat\:zDB01}
{\xe \v zDB01\:getCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::getCat ()}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 422} of file {\b zDB01.cpp}.}\par
}
{\xe \v getLink\:zDB01}
{\xe \v zDB01\:getLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::getLink (int curCat)}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b zDB01.cpp}.}\par
}
{\xe \v initField\:zDB01}
{\xe \v zDB01\:initField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::initField (std::string inputValue, wxTextCtrl * field)}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 267} of file {\b zDB01.cpp}.}\par
}
{\xe \v insertCat\:zDB01}
{\xe \v zDB01\:insertCat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::insertCat (std::string cat, std::string memo)}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 355} of file {\b zDB01.cpp}.}\par
}
{\xe \v insertLink\:zDB01}
{\xe \v zDB01\:insertLink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::insertLink (std::string idlk1, std::string lkn, std::string lnk, std::string ddes)}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 381} of file {\b zDB01.cpp}.}\par
}
{\xe \v listCategories\:zDB01}
{\xe \v zDB01\:listCategories}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::listCategories (bool idPrim)}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b zDB01.cpp}.}\par
}
{\xe \v listDatabases\:zDB01}
{\xe \v zDB01\:listDatabases}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::listDatabases ()}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b zDB01.cpp}.}\par
}
{\xe \v listLinks\:zDB01}
{\xe \v zDB01\:listLinks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::listLinks (int curCat, bool dRID)}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b zDB01.cpp}.}\par
}
{\xe \v listLk1Lk2\:zDB01}
{\xe \v zDB01\:listLk1Lk2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::listLk1Lk2 ()}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 303} of file {\b zDB01.cpp}.}\par
}
{\xe \v nb01\:zDB01}
{\xe \v zDB01\:nb01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::nb01 ()}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 293} of file {\b zDB01.cpp}.}\par
}
{\xe \v selDB\:zDB01}
{\xe \v zDB01\:selDB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void zDB01::selDB ()}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 255} of file {\b zDB01.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v curDB\:zDB01}
{\xe \v zDB01\:curDB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::curDB}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b zDB01.h}.}\par
}
{\xe \v database\:zDB01}
{\xe \v zDB01\:database}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::database = "bcswebtools"}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b zDB01.h}.}\par
}
{\xe \v db\:zDB01}
{\xe \v zDB01\:db}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxString zDB01::db}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b zDB01.h}.}\par
}
{\xe \v dbn\:zDB01}
{\xe \v zDB01\:dbn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxArrayString zDB01::dbn}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b zDB01.h}.}\par
}
{\xe \v insertMode\:zDB01}
{\xe \v zDB01\:insertMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool zDB01::insertMode}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b zDB01.h}.}\par
}
{\xe \v lk1\:zDB01}
{\xe \v zDB01\:lk1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxArrayString zDB01::lk1}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b zDB01.h}.}\par
}
{\xe \v lk2\:zDB01}
{\xe \v zDB01\:lk2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxArrayString zDB01::lk2}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b zDB01.h}.}\par
}
{\xe \v lk3\:zDB01}
{\xe \v zDB01\:lk3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxArrayString zDB01::lk3}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b zDB01.h}.}\par
}
{\xe \v password\:zDB01}
{\xe \v zDB01\:password}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::password = "Peace007!amb"}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b zDB01.h}.}\par
}
{\xe \v server\:zDB01}
{\xe \v zDB01\:server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::server = "localhost"}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b zDB01.h}.}\par
}
{\xe \v strIdlk1\:zDB01}
{\xe \v zDB01\:strIdlk1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::strIdlk1 = "43"}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b zDB01.h}.}\par
}
{\xe \v user\:zDB01}
{\xe \v zDB01\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string zDB01::user = "bcs"}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b zDB01.h}.}\par
}
{\xe \v zres\:zDB01}
{\xe \v zDB01\:zres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mysqlpp::StoreQueryResult zDB01::zres}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b zDB01.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01.h}\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01.cpp}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bcsGui.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v bcsGui.cpp}
{\xe \v bcsGui.cpp}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "bcsGui.h"}\par
{\f2 #include <wx/wx.h>}\par
{\f2 #include <wx/dirdlg.h>}\par
{\f2 #include <wx/textdlg.h>}\par
{\f2 #include <wx/msgdlg.h>}\par
{\f2 #include <wx/string.h>}\par
{\f2 #include <wx/window.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bcsGui.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "bcsGui.h"}\par
00002 {\cf21 #include <wx/wx.h>}\par
00003 {\cf21 #include <wx/dirdlg.h>}\par
00004 {\cf21 #include <wx/textdlg.h>}\par
00005 {\cf21 #include <wx/msgdlg.h>}\par
00006 {\cf21 #include <wx/string.h>}\par
00007 {\cf21 #include <wx/window.h>}\par
00008 \par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 bcsGui::bcsGui()\par
00012 \{\par
00013     {\cf20 //ctor}\par
00014 \}\par
00015 \par
00016 bcsGui::~bcsGui()\par
00017 \{\par
00018     {\cf20 //dtor}\par
00019 \}\par
00020 \par
00021 std::string bcsGui::SelDir({\cf18 string} initDir)\par
00022 \{\par
00023     {\cf18 string} selDir;\par
00024     wxDirDialog dlg(NULL, {\cf22 "Choose input directory"}, initDir, wxDD_DEFAULT_STYLE | wxDD_DIR_MUST_EXIST);\par
00025     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00026     \{\par
00027         selDir = dlg.GetPath().ToStdString();\par
00028         {\cf19 return} selDir;\par
00029 \par
00030     \}\par
00031     dlg.Destroy();\par
00032 \par
00033 \}\par
00034 \par
00035 {\cf18 string} bcsGui::GetText({\cf18 bool} memo, {\cf18 string} initVal, {\cf18 string} prompt, {\cf18 string} caption)\par
00036 \{\par
00037     wxString wxInit;\par
00038     wxInit = initVal;\par
00039     {\cf18 string} rval;\par
00040     {\cf19 if} (memo)\par
00041     \{\par
00042         wxTextEntryDialog dlg(NULL, prompt, caption, wxInit, (wxCANCEL | wxOK | wxTE_MULTILINE), wxPoint(50, 50));\par
00043         {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00044         \{\par
00045             {\cf20 // We can be certain that this string contains letters only.}\par
00046             wxString value = dlg.GetValue();\par
00047             rval = value;\par
00048             {\cf19 return} rval;\par
00049         \}\par
00050         {\cf19 else}\par
00051         \{\par
00052             rval = {\cf22 ""};\par
00053             {\cf19 return} rval;\par
00054         \}\par
00055     \}\par
00056     {\cf19 else}\par
00057     \{\par
00058         wxTextEntryDialog dlg(NULL, prompt, caption, wxInit, (wxCANCEL | wxOK), wxPoint(50, 50));\par
00059         {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00060         \{\par
00061             {\cf20 // We can be certain that this string contains letters only.}\par
00062             wxString value = dlg.GetValue();\par
00063             rval = value;\par
00064             {\cf19 return} rval;\par
00065         \}\par
00066         {\cf19 else}\par
00067         \{\par
00068             rval = {\cf22 ""};\par
00069             {\cf19 return} rval;\par
00070         \}\par
00071 \par
00072     \}\par
00073 \}\par
00074 \par
00075 {\cf18 int} bcsGui::yornQues({\cf18 string} caption, {\cf18 string} prompt)\par
00076 \{\par
00077     {\cf18 int} answer;\par
00078     answer = wxMessageBox(caption, prompt, wxYES_NO | wxCANCEL, NULL );\par
00079     {\cf19 return} answer;\par
00080 \}\par
00081 {\cf18 string} bcsGui::openFileDialog(wxWindow* parent, {\cf17 const} wxString& message, {\cf17 const} wxString& defaultDir, {\cf17 const} wxString& defaultFile, {\cf17 const} wxString& wildcard, {\cf18 int} flags)\par
00082 \{\par
00083     {\cf18 string} path;\par
00084     wxFileDialog openFileDialog(parent, message, defaultDir, defaultFile, wildcard, flags);\par
00085     {\cf19 if} (openFileDialog.ShowModal() == wxID_OK)\par
00086     \{\par
00087         path = openFileDialog.GetPath().ToStdString();\par
00088     \}\par
00089     {\cf19 return} path;\par
00090 \}\par
00091 \par
00092 \par
00093 \par
00094 \par
00095 \par
00096 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bcsGui.h File Reference\par \pard\plain 
{\tc\tcl2 \v bcsGui.h}
{\xe \v bcsGui.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <wx/string.h>}\par
{\f2 #include <wx/window.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b bcsGui}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
bcsGui.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <string>}\par
00002 {\cf21 #include <wx/string.h>}\par
00003 {\cf21 #include <wx/window.h>}\par
00004 \par
00005 {\cf17 using namespace }std;\par
00006 \par
00007 {\cf17 class }bcsGui\par
00008 \{\par
00009 {\cf17 public}:\par
00010     bcsGui();\par
00011     {\cf17 virtual} ~bcsGui();\par
00012     std::string SelDir({\cf18 string} initDir);\par
00013     {\cf18 string} GetText({\cf18 bool} memo, {\cf18 string} initVal, {\cf18 string} prompt, {\cf18 string} caption);\par
00014     {\cf18 int} yornQues({\cf18 string} caption, {\cf18 string} prompt);\par
00015     {\cf18 string} openFileDialog(wxWindow* parent, {\cf17 const} wxString& message, {\cf17 const} wxString& defaultDir, {\cf17 const} wxString& defaultFile, {\cf17 const} wxString& wildcard, {\cf18 int} flags);\par
00016 \par
00017 {\cf17 protected}:\par
00018 \par
00019 {\cf17 private}:\par
00020 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01App.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01App.cpp}
{\xe \v cppMD01App.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "cppMD01App.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include "bcsGui.h"}\par
{\f2 #include "cppMD01Main.h"}\par
{\f2 #include <wx/image.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IMPLEMENT_APP} ({\b cppMD01App})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v IMPLEMENT_APP\:cppMD01App.cpp}
{\xe \v cppMD01App.cpp\:IMPLEMENT_APP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IMPLEMENT_APP ({\b cppMD01App} )}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01App.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /***************************************************************}\par
00002 {\cf20  * Name:      cppMD01App.cpp}\par
00003 {\cf20  * Purpose:   Code for Application Class}\par
00004 {\cf20  * Author:    Mr. Arch Brooks (arch@archbrooks.com)}\par
00005 {\cf20  * Created:   Sunday, 08 September 2024 07:26:59}\par
00006 {\cf20  * Copyright: Mr. Arch Brooks (https://archman.us)}\par
00007 {\cf20  * License:}\par
00008 {\cf20  **************************************************************/}\par
00009 \par
00010 {\cf21 #include "cppMD01App.h"}\par
00011 {\cf21 #include "zDB01.h"}\par
00012 {\cf21 #include "bcsGui.h"}\par
00013 {\cf21 #include "zDB01.h"}\par
00014 \par
00015 {\cf20 //(*AppHeaders}\par
00016 {\cf21 #include "cppMD01Main.h"}\par
00017 {\cf21 #include <wx/image.h>}\par
00018 {\cf20 //*)}\par
00019 \par
00020 IMPLEMENT_APP(cppMD01App);\par
00021 \par
00022 {\cf18 bool} cppMD01App::OnInit()\par
00023 \{\par
00024     {\cf20 //(*AppInitialize}\par
00025     {\cf18 bool} wxsOK = {\cf17 true};\par
00026     wxInitAllImageHandlers();\par
00027     {\cf19 if} ( wxsOK )\par
00028     \{\par
00029         cppMD01Frame* Frame = {\cf17 new} cppMD01Frame(0);\par
00030         Frame->Show();\par
00031         SetTopWindow(Frame);\par
00032     \}\par
00033     {\cf20 //*)}\par
00034     {\cf19 return} wxsOK;\par
00035 \par
00036 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01App.h File Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01App.h}
{\xe \v cppMD01App.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/app.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b cppMD01App}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01App.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /***************************************************************}\par
00002 {\cf20  * Name:      cppMD01App.h}\par
00003 {\cf20  * Purpose:   Defines Application Class}\par
00004 {\cf20  * Author:    Mr. Arch Brooks (arch@archbrooks.com)}\par
00005 {\cf20  * Created:   Sunday, 08 September 2024 07:26:59}\par
00006 {\cf20  * Copyright: Mr. Arch Brooks (https://archman.us)}\par
00007 {\cf20  * License:}\par
00008 {\cf20  **************************************************************/}\par
00009 \par
00010 {\cf21 #ifndef CPPMYSKEL1APP_H}\par
00011 {\cf21 #define CPPMYSKEL1APP_H}\par
00012 \par
00013 {\cf21 #include <wx/app.h>}\par
00014 \par
00015 {\cf17 class }cppMD01App : {\cf17 public} wxApp\par
00016 \{\par
00017     {\cf17 public}:\par
00018         {\cf17 virtual} {\cf18 bool} OnInit();\par
00019 \};\par
00020 \par
00021 {\cf21 #endif }{\cf20 // CPPMYSKEL1APP_H}\par
00022 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01Main.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "cppMD01Main.h"}\par
{\f2 #include <wx/msgdlg.h>}\par
{\f2 #include <wx/grid.h>}\par
{\f2 #include <mysql++.h>}\par
{\f2 #include <mysql.h>}\par
{\f2 #include <wx/hyperlink.h>}\par
{\f2 #include <wx/filedlg.h>}\par
{\f2 #include <wx/log.h>}\par
{\f2 #include <boost/filesystem.hpp>}\par
{\f2 #include <boost/algorithm/string.hpp>}\par
{\f2 #include "dlgXqt2.h"}\par
{\f2 #include "dlgNewLink.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include "bcsGui.h"}\par
{\f2 #include "dlgSelDB.h"}\par
{\f2 #include "dlgNewCat.h"}\par
{\f2 #include "wx/clipbrd.h"}\par
{\f2 #include "dlgSelCat.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b wxbuildinfoformat} \{ {\b short_f}
, {\b long_f}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wxString {\b wxbuildinfo} ({\b wxbuildinfoformat} format)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01} {\b zrdb}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcsGui} {\b gui01}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v wxbuildinfoformat\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:wxbuildinfoformat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b wxbuildinfoformat}}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs16\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v short_f\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:short_f}
{\qr short_f{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{\cell }{\row }
{\xe \v long_f\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:long_f}
{\qr long_f{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 37} of file {\b cppMD01Main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v wxbuildinfo\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:wxbuildinfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wxString wxbuildinfo ({\b wxbuildinfoformat} format)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b cppMD01Main.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v gui01\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:gui01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcsGui} gui01}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b cppMD01Main.cpp}.}\par
}
{\xe \v zrdb\:cppMD01Main.cpp}
{\xe \v cppMD01Main.cpp\:zrdb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b zDB01} zrdb}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b cppMD01Main.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01Main.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /***************************************************************}\par
00002 {\cf20  * Name:      cppMD01Main.cpp}\par
00003 {\cf20  * Purpose:   Code for Application Frame}\par
00004 {\cf20  * Author:    Mr. Arch Brooks (arch@archbrooks.com)}\par
00005 {\cf20  * Created:   Sunday, 08 September 2024 07:26:59}\par
00006 {\cf20  * Copyright: Mr. Arch Brooks (https://archman.us)}\par
00007 {\cf20  * License:}\par
00008 {\cf20  **************************************************************/}\par
00009 \par
00010 {\cf21 #include "cppMD01Main.h"}\par
00011 {\cf21 #include <wx/msgdlg.h>}\par
00012 {\cf21 #include <wx/grid.h>}\par
00013 {\cf21 #include <mysql++.h>}\par
00014 {\cf21 #include <mysql.h>}\par
00015 {\cf21 #include <wx/hyperlink.h>}\par
00016 {\cf21 #include <wx/filedlg.h>}\par
00017 {\cf21 #include <wx/log.h>}\par
00018 {\cf21 #include <boost/filesystem.hpp>}\par
00019 {\cf21 #include <boost/algorithm/string.hpp>}\par
00020 {\cf17 namespace }fs = boost::filesystem;\par
00021 {\cf21 #include "dlgXqt2.h"}\par
00022 {\cf21 #include "dlgNewLink.h"}\par
00023 {\cf21 #include "zDB01.h"}\par
00024 {\cf21 #include "bcsGui.h"}\par
00025 {\cf21 #include "dlgSelDB.h"}\par
00026 {\cf21 #include "dlgNewCat.h"}\par
00027 {\cf21 #include "wx/clipbrd.h"}\par
00028 {\cf21 #include "dlgSelCat.h"}\par
00029 {\cf20 //#include "dlg"}\par
00030 \par
00031 {\cf20 //(*InternalHeaders(cppMD01Frame)}\par
00032 {\cf21 #include <wx/intl.h>}\par
00033 {\cf21 #include <wx/string.h>}\par
00034 {\cf20 //*)}\par
00035 \par
00036 {\cf20 //helper functions}\par
00037 {\cf17 enum} wxbuildinfoformat\par
00038 \{\par
00039     short_f, long_f\par
00040 \};\par
00041 \par
00042 zDB01 zrdb;\par
00043 bcsGui gui01;\par
00044 \par
00045 wxString wxbuildinfo(wxbuildinfoformat format)\par
00046 \{\par
00047     wxString wxbuild(wxVERSION_STRING);\par
00048 \par
00049     {\cf19 if} (format == long_f )\par
00050     \{\par
00051 {\cf21 #if defined(__WXMSW__)}\par
00052         wxbuild << _T({\cf22 "-Windows"});\par
00053 {\cf21 #elif defined(__UNIX__)}\par
00054         wxbuild << _T({\cf22 "-Linux"});\par
00055 {\cf21 #endif}\par
00056 \par
00057 {\cf21 #if wxUSE_UNICODE}\par
00058         wxbuild << _T({\cf22 "-Unicode build"});\par
00059 {\cf21 #else}\par
00060         wxbuild << _T({\cf22 "-ANSI build"});\par
00061 {\cf21 #endif }{\cf20 // wxUSE_UNICODE}\par
00062     \}\par
00063 \par
00064     {\cf19 return} wxbuild;\par
00065 \}\par
00066 \par
00067 {\cf20 //(*IdInit(cppMD01Frame)}\par
00068 {\cf17 const} {\cf18 long} cppMD01Frame::ID_STATICTEXT1 = wxNewId();\par
00069 {\cf17 const} {\cf18 long} cppMD01Frame::ID_PANEL1 = wxNewId();\par
00070 {\cf17 const} {\cf18 long} cppMD01Frame::ID_PANEL3 = wxNewId();\par
00071 {\cf17 const} {\cf18 long} cppMD01Frame::ID_STATICTEXT2 = wxNewId();\par
00072 {\cf17 const} {\cf18 long} cppMD01Frame::ID_SCROLLEDWINDOW1 = wxNewId();\par
00073 {\cf17 const} {\cf18 long} cppMD01Frame::idMenucpp = wxNewId();\par
00074 {\cf17 const} {\cf18 long} cppMD01Frame::idMenuQuit = wxNewId();\par
00075 {\cf17 const} {\cf18 long} cppMD01Frame::idMenuAbout = wxNewId();\par
00076 {\cf17 const} {\cf18 long} cppMD01Frame::ID_STATUSBAR1 = wxNewId();\par
00077 {\cf17 const} {\cf18 long} cppMD01Frame::ID_MENUITEM1 = wxNewId();\par
00078 {\cf17 const} {\cf18 long} cppMD01Frame::idpumNewCat = wxNewId();\par
00079 {\cf17 const} {\cf18 long} cppMD01Frame::ID_PumEdCat = wxNewId();\par
00080 {\cf17 const} {\cf18 long} cppMD01Frame::ID_NewBlog = wxNewId();\par
00081 {\cf17 const} {\cf18 long} cppMD01Frame::ID_MENUITEM2 = wxNewId();\par
00082 {\cf17 const} {\cf18 long} cppMD01Frame::ID_menAD = wxNewId();\par
00083 {\cf17 const} {\cf18 long} cppMD01Frame::ID_menNB = wxNewId();\par
00084 {\cf17 const} {\cf18 long} cppMD01Frame::ID_pumDel = wxNewId();\par
00085 {\cf17 const} {\cf18 long} cppMD01Frame::ID_pumEditLink = wxNewId();\par
00086 {\cf20 //*)}\par
00087 \par
00088 BEGIN_EVENT_TABLE(cppMD01Frame,wxFrame)\par
00089     {\cf20 //(*EventTable(cppMD01Frame)}\par
00090     {\cf20 //*)}\par
00091 END_EVENT_TABLE()\par
00092 \par
00093 cppMD01Frame::cppMD01Frame(wxWindow* parent,wxWindowID {\cf18 id})\par
00094 \{\par
00095     mysqlpp::Connection conn;\par
00096     {\cf20 //(*Initialize(cppMD01Frame)}\par
00097     wxBoxSizer* BoxSizer1;\par
00098     wxBoxSizer* BoxSizer2;\par
00099     wxBoxSizer* BoxSizer3;\par
00100     wxBoxSizer* BoxSizer4;\par
00101     wxBoxSizer* BoxSizer5;\par
00102     wxMenu* Menu1;\par
00103     wxMenu* Menu2;\par
00104     wxMenuBar* MenuBar1;\par
00105     wxMenuItem* MenuItem1;\par
00106     wxMenuItem* MenuItem2;\par
00107 \par
00108     Create(parent, {\cf18 id}, _({\cf22 "Brooks Computing Systems, LLC  ** Programmer\\'s Workbench **"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_FRAME_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxFULL_REPAINT_ON_RESIZE, _T({\cf22 "id"}));\par
00109     BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00110     BoxSizer2 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00111     BoxSizer3 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00112     BoxSizer4 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00113     Panel1 = {\cf17 new} wxPanel({\cf17 this}, ID_PANEL1, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T({\cf22 "ID_PANEL1"}));\par
00114     StaticText1 = {\cf17 new} wxStaticText(Panel1, ID_STATICTEXT1, _({\cf22 "Label"}), wxPoint(8,0), wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT1"}));\par
00115     BoxSizer4->Add(Panel1, 1, wxALL|wxEXPAND, 5);\par
00116     BoxSizer3->Add(BoxSizer4, 1, wxALL|wxEXPAND, 5);\par
00117     BoxSizer5 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00118     Panel2 = {\cf17 new} wxPanel({\cf17 this}, ID_PANEL3, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T({\cf22 "ID_PANEL3"}));\par
00119     BoxSizer5->Add(Panel2, 0, wxALL|wxEXPAND, 5);\par
00120     StaticText2 = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT2, _({\cf22 "Label"}), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE, _T({\cf22 "ID_STATICTEXT2"}));\par
00121     BoxSizer5->Add(StaticText2, 0, wxALL|wxEXPAND, 5);\par
00122     BoxSizer3->Add(BoxSizer5, 0, wxALL|wxEXPAND, 5);\par
00123     ScrolledWindow1 = {\cf17 new} wxScrolledWindow({\cf17 this}, ID_SCROLLEDWINDOW1, wxDefaultPosition, wxSize(11,7), wxVSCROLL|wxHSCROLL, _T({\cf22 "ID_SCROLLEDWINDOW1"}));\par
00124     BoxSizer3->Add(ScrolledWindow1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00125     BoxSizer2->Add(BoxSizer3, 0, wxALL|wxEXPAND, 5);\par
00126     BoxSizer1->Add(BoxSizer2, 0, wxALL|wxEXPAND, 5);\par
00127     SetSizer(BoxSizer1);\par
00128     MenuBar1 = {\cf17 new} wxMenuBar();\par
00129     Menu1 = {\cf17 new} wxMenu();\par
00130     menSelectCpp = {\cf17 new} wxMenuItem(Menu1, idMenucpp, _({\cf22 "Select c++ file to compile"}), _({\cf22 "Compile c++"}), wxITEM_NORMAL);\par
00131     Menu1->Append(menSelectCpp);\par
00132     MenuItem1 = {\cf17 new} wxMenuItem(Menu1, idMenuQuit, _({\cf22 "Quit\\tAlt-F4"}), _({\cf22 "Quit the application"}), wxITEM_NORMAL);\par
00133     Menu1->Append(MenuItem1);\par
00134     MenuBar1->Append(Menu1, _({\cf22 "&File"}));\par
00135     Menu2 = {\cf17 new} wxMenu();\par
00136     MenuItem2 = {\cf17 new} wxMenuItem(Menu2, idMenuAbout, _({\cf22 "About\\tF1"}), _({\cf22 "Show info about this application"}), wxITEM_NORMAL);\par
00137     Menu2->Append(MenuItem2);\par
00138     MenuBar1->Append(Menu2, _({\cf22 "Help"}));\par
00139     SetMenuBar(MenuBar1);\par
00140     StatusBar1 = {\cf17 new} wxStatusBar({\cf17 this}, ID_STATUSBAR1, wxFULL_REPAINT_ON_RESIZE, _T({\cf22 "ID_STATUSBAR1"}));\par
00141     {\cf18 int} __wxStatusBarWidths_1[1] = \{ -300 \};\par
00142     {\cf18 int} __wxStatusBarStyles_1[1] = \{ wxSB_NORMAL \};\par
00143     StatusBar1->SetFieldsCount(1,__wxStatusBarWidths_1);\par
00144     StatusBar1->SetStatusStyles(1,__wxStatusBarStyles_1);\par
00145     SetStatusBar(StatusBar1);\par
00146     MenuItem3 = {\cf17 new} wxMenuItem((&pumMaster), ID_MENUITEM1, _({\cf22 "Change Background Color"}), wxEmptyString, wxITEM_NORMAL);\par
00147     pumMaster.Append(MenuItem3);\par
00148     pumNewCat = {\cf17 new} wxMenuItem((&pumMaster), idpumNewCat, _({\cf22 "Enter New Category"}), _({\cf22 "Enter New Category"}), wxITEM_NORMAL);\par
00149     pumMaster.Append(pumNewCat);\par
00150     MenuItem5 = {\cf17 new} wxMenuItem((&pumMaster), ID_PumEdCat, _({\cf22 "Edit Category"}), _({\cf22 "Edit This Category"}), wxITEM_NORMAL);\par
00151     pumMaster.Append(MenuItem5);\par
00152     pumNewBlogPost = {\cf17 new} wxMenuItem((&pumMaster), ID_NewBlog, _({\cf22 "Create New Blog Post"}), _({\cf22 "Create A New Blog Post"}), wxITEM_NORMAL);\par
00153     pumMaster.Append(pumNewBlogPost);\par
00154     MenuItem4 = {\cf17 new} wxMenuItem((&pumDetail), ID_MENUITEM2, _({\cf22 "Change Background Color"}), wxEmptyString, wxITEM_NORMAL);\par
00155     pumDetail.Append(MenuItem4);\par
00156     pumAddDocs = {\cf17 new} wxMenuItem((&pumDetail), ID_menAD, _({\cf22 "addDocs"}), _({\cf22 "Add  New Documents / Items"}), wxITEM_NORMAL);\par
00157     pumDetail.Append(pumAddDocs);\par
00158     menNewPost = {\cf17 new} wxMenuItem((&pumDetail), ID_menNB, _({\cf22 "Create New Blog Post"}), _({\cf22 "New Blog Post Now!"}), wxITEM_NORMAL);\par
00159     pumDetail.Append(menNewPost);\par
00160     pumDelLink = {\cf17 new} wxMenuItem((&pumDetail), ID_pumDel, _({\cf22 "Delete Link"}), _({\cf22 "Delete A Item"}), wxITEM_NORMAL);\par
00161     pumDetail.Append(pumDelLink);\par
00162     pumEditDetails = {\cf17 new} wxMenuItem((&pumDetail), ID_pumEditLink, _({\cf22 "Edit Link Details"}), _({\cf22 "Edit Link Details"}), wxITEM_NORMAL);\par
00163     pumDetail.Append(pumEditDetails);\par
00164     BoxSizer1->Fit({\cf17 this});\par
00165     BoxSizer1->SetSizeHints({\cf17 this});\par
00166     Center();\par
00167 \par
00168     Connect(idMenucpp,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnmenSelectCppSelected);\par
00169     Connect(idMenuQuit,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnQuit);\par
00170     Connect(idMenuAbout,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnAbout);\par
00171     Connect(idpumNewCat,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumNewCatSelected);\par
00172     Connect(ID_PumEdCat,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumEdCatSelected);\par
00173     Connect(ID_NewBlog,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumNewBlogPostSelected);\par
00174     Connect(ID_menAD,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumAddDocsSelected);\par
00175     Connect(ID_menNB,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumNewBlogPostSelected);\par
00176     Connect(ID_pumDel,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumDelLinkSelected);\par
00177     Connect(ID_pumEditLink,wxEVT_COMMAND_MENU_SELECTED,(wxObjectEventFunction)&cppMD01Frame::OnpumEditLinkSelected);\par
00178     {\cf20 //*)}\par
00179 \par
00180     SetStatusText({\cf22 "Button Clicked!"});\par
00181 \par
00182 \par
00183     masterGrid = {\cf17 new} wxGrid({\cf17 this}, wxID_ANY, wxDefaultPosition, wxSize(1200, 300));\par
00184     masterGrid->CreateGrid(0, 3);\par
00185     masterGrid->SetColLabelValue(0, {\cf22 "Category ID"});\par
00186     masterGrid->SetColLabelValue(1, {\cf22 "Category Name"});\par
00187     masterGrid->SetColLabelValue(2, {\cf22 "Detailed Description"});\par
00188     masterGrid->SetColSize(1, 500);\par
00189     masterGrid->SetColSize(2, 575);\par
00190 \par
00191     detailGrid = {\cf17 new} wxGrid({\cf17 this}, wxID_ANY, wxPoint(400, 0), wxSize(1200, 500));\par
00192     detailGrid->CreateGrid(0, 4);\par
00193     detailGrid->SetColLabelValue(0, {\cf22 "Link ID"});\par
00194     detailGrid->SetColLabelValue(1, {\cf22 "Link Name"});\par
00195     detailGrid->SetColLabelValue(2, {\cf22 "Link"});\par
00196     detailGrid->SetColLabelValue(3, {\cf22 "Description"});\par
00197     detailGrid->SetColSize(1, 500);\par
00198     detailGrid->SetColSize(2, 300);\par
00199     detailGrid->SetColSize(3, 325);\par
00200     {\cf20 //BoxSizer4->Add(Panel1, 1, wxALL|wxEXPAND, 5);}\par
00201     {\cf20 //Panel1->SetSizer(BoxSizer4);}\par
00202     {\cf20 //BoxSizer5->Add(Panel2, 1, wxALL|wxEXPAND, 5);}\par
00203     {\cf20 //Panel2->SetSizer(BoxSizer5);}\par
00204     detailGrid->SetMaxSize(wxSize(-1, 150));  {\cf20 // Set the maximum height to 150}\par
00205     BoxSizer4->Add(masterGrid, 0, wxEXPAND, 2);\par
00206     BoxSizer5->Add(detailGrid, 0, wxEXPAND, 2);\par
00207     {\cf20 //Panel1->Add(masterGrid, 1, wxALL|wxEXPAND, 5);}\par
00208     {\cf20 //Panel2->Add(detailGrid, 1, wxALL|wxEXPAND, 5);}\par
00209     Layout();\par
00210 \par
00211     PopulateMasterGrid();\par
00212     detailGrid->Bind(wxEVT_GRID_CELL_LEFT_CLICK, &cppMD01Frame::OnCellClick, {\cf17 this});\par
00213     masterGrid->Bind(wxEVT_GRID_CELL_LEFT_CLICK, &cppMD01Frame::OnMasterGridCellClick, {\cf17 this});\par
00214     {\cf20 //masterGrid->Bind(wxEVT_GRID_CELL_LEFT_CLICK, &cppMD01Frame::OnDetailGridCellClick, this);}\par
00215     masterGrid->Bind(wxEVT_GRID_CELL_RIGHT_CLICK, &cppMD01Frame::OnMasterGridPopup, {\cf17 this});\par
00216     detailGrid->Bind(wxEVT_GRID_CELL_RIGHT_CLICK, &cppMD01Frame::OnDetailGridPopup, {\cf17 this});\par
00217     detailGrid->EnableEditing({\cf17 true});\par
00218 \par
00219     {\cf20 //SetSizer(BoxSizer5);}\par
00220     {\cf20 //SetSizer(BoxSizer4);}\par
00221     {\cf20 //SetSizer(BoxSizer3);}\par
00222     {\cf20 //SetSizer(BoxSizer2);}\par
00223     {\cf20 //SetSizer(BoxSizer1);}\par
00224     SetSizerAndFit(BoxSizer1);\par
00225     {\cf20 //BoxSizer1->Fit(this);}\par
00226     LoadDetailData(0);\par
00227 \par
00228 \}\par
00229 \par
00230 cppMD01Frame::~cppMD01Frame()\par
00231 \{\par
00232     {\cf20 //(*Destroy(cppMD01Frame)}\par
00233     {\cf20 //*)}\par
00234 \}\par
00235 \par
00251 {\cf18 void} cppMD01Frame::PopulateMasterGrid()\par
00252 \{\par
00253     {\cf20 // Attempt to connect to the MySQL database}\par
00254     {\cf19 if} (!conn.connect({\cf22 "bcswebtools"}, {\cf22 "localhost"}, {\cf22 "bcs"}, {\cf22 "Peace007!amb"}))\par
00255     \{\par
00256         {\cf20 // Database connection failed, exit the function}\par
00257         {\cf20 // wxWrite("Database connection failed.");}\par
00258         {\cf19 return};\par
00259     \}\par
00260 \par
00261     {\cf20 // Execute the SQL query to fetch all records from the 'lk1' table, ordered by 'cat'}\par
00262     mysqlpp::Query query = conn.query({\cf22 "SELECT * FROM lk1 ORDER BY cat"});\par
00263     mysqlpp::StoreQueryResult res = query.store();\par
00264 \par
00265     {\cf20 // Clear the current contents of the grid and append rows based on the number of records fetched}\par
00266     masterGrid->ClearGrid();\par
00267     masterGrid->AppendRows(res.num_rows());\par
00268 \par
00269     {\cf20 // Populate the grid with data from the result set}\par
00270     {\cf19 for} ({\cf18 size_t} i = 0; i < res.num_rows(); ++i)\par
00271     \{\par
00272         masterGrid->SetCellValue(i, 0, res[i][0].c_str());  {\cf20 // Set cell value for column 0}\par
00273         masterGrid->SetCellValue(i, 1, res[i][1].c_str());  {\cf20 // Set cell value for column 1}\par
00274         masterGrid->SetCellValue(i, 2, res[i][2].c_str());  {\cf20 // Set cell value for column 2}\par
00275     \}\par
00276 \}\par
00277 \par
00286 {\cf18 void} cppMD01Frame::OnCellClick(wxGridEvent& event)\par
00287 \{\par
00288     {\cf20 // Get the grid from the event}\par
00289     wxGrid* grid = {\cf17 static_cast<}wxGrid*{\cf17 >}({\cf17 event}.GetEventObject());\par
00290 \par
00291     {\cf20 // Get the clicked cell's row and column}\par
00292     row = {\cf17 event}.GetRow();\par
00293     {\cf18 int} col = {\cf17 event}.GetCol();\par
00294 \par
00295     {\cf20 // Retrieve the cell value as a wxString}\par
00296     wxString cellValue = grid->GetCellValue(row, col);\par
00297 \par
00298     {\cf20 // Check if the cell value starts with "http"}\par
00299     {\cf19 if} (cellValue.StartsWith({\cf22 "http"}))\par
00300     \{\par
00301         {\cf20 // Open the URL in the default web browser}\par
00302         wxLaunchDefaultBrowser(cellValue);\par
00303     \}\par
00304     {\cf19 else} {\cf19 if} (cellValue.find({\cf22 ".pdf"}) != wxNOT_FOUND)\par
00305     \{\par
00306         cmd = {\cf22 "okular \\""};\par
00307         std::string tbuf;\par
00308         tbuf = cellValue.ToStdString();\par
00309         cmd = cmd + tbuf + {\cf22 "\\""};\par
00310         system(cmd.c_str());\par
00311     \}\par
00312     {\cf19 else} {\cf19 if} (cellValue.find({\cf22 ".odt"})  != wxNOT_FOUND)\par
00313     \{\par
00314         std::string pbuf =  {\cf22 "\\""} + cellValue.ToStdString() + {\cf22 "\\" & "};\par
00315         cmd = {\cf22 "openoffice4 -writer "} + pbuf;\par
00316         system(cmd.c_str());\par
00317     \}\par
00318     {\cf19 else}\par
00319     \{\par
00320         system(cellValue.c_str());\par
00321     \}\par
00322     {\cf20 // Allow the event to continue to be processed}\par
00323     {\cf17 event}.Skip();\par
00324 \}\par
00325 \par
00334 {\cf18 void} cppMD01Frame::OnQuit(wxCommandEvent& event)\par
00335 \{\par
00336     Close();\par
00337 \}\par
00338 \par
00347 {\cf18 void} cppMD01Frame::OnAbout(wxCommandEvent& event)\par
00348 \{\par
00349     wxString msg = wxbuildinfo(long_f);  \par
00350     wxMessageBox(msg, _({\cf22 "Welcome to..."}));  \par
00351 \}\par
00352 \par
00370 {\cf18 void} cppMD01Frame::LoadDetailData({\cf18 long} idlk1)\par
00371 \{\par
00372     mysqlpp::Query query = conn.query();\par
00373     query << {\cf22 "SELECT idlk2, lkn, lnk, ddes FROM lk2 WHERE idlk1 = "} << idlk1 << {\cf22 " ORDER BY lkn"};\par
00374     mysqlpp::StoreQueryResult res = query.store();\par
00375     res.num_rows();\par
00376     {\cf19 if} (res.num_rows() > 0)\par
00377     \{\par
00378         wxString zlabel = std::to_string(res.num_rows()) + {\cf22 " Records Retrieved"};\par
00379         SetStatusText(zlabel);\par
00380 \par
00381         detailGrid->ClearGrid();\par
00382         {\cf19 if} (detailGrid->GetNumberRows() >= 1)\par
00383         \{\par
00384             detailGrid->DeleteRows(0, detailGrid->GetNumberRows());\par
00385         \}\par
00386         {\cf18 int} nrow = res.num_rows();\par
00387         detailGrid->AppendRows(nrow);\par
00388 \par
00389         {\cf19 for} ({\cf18 size_t} i = 0; i < res.num_rows(); ++i)\par
00390         \{\par
00391             detailGrid->SetCellValue(i, 0, res[i][{\cf22 "idlk2"}].c_str());\par
00392             detailGrid->SetCellValue(i, 1, res[i][{\cf22 "lkn"}].c_str());\par
00393             detailGrid->SetCellValue(i, 2, res[i][{\cf22 "lnk"}].c_str());\par
00394             detailGrid->SetCellValue(i, 3, res[i][{\cf22 "ddes"}].c_str());\par
00395         \}\par
00396         res.clear();\par
00397         res.empty();\par
00398     \}\par
00399     {\cf19 else}\par
00400     \{\par
00401         {\cf18 int} {\cf18 id} = 1;\par
00402         wxCommandEvent event(wxEVT_COMMAND_BUTTON_CLICKED, {\cf18 id});\par
00403  {\cf20 //       wxCommandEvent& event}\par
00404         OnpumAddDocsSelected(event);\par
00405 \par
00406     \}\par
00407 \par
00408 {\cf20 //    StatusBar1->SetStatusText(zlabel), 0); // 0 is the field index for the first pane}\par
00409     {\cf20 //StatusBar1->SetLabel(zlabel);}\par
00410 \par
00411 \}\par
00412 \par
00422 {\cf18 void} cppMD01Frame::OnMasterGridCellClick(wxGridEvent& event)\par
00423 \{\par
00424     row = {\cf17 event}.GetRow(); {\cf20 // Get the row index of the clicked cell}\par
00425     wxString idlk1Str = masterGrid->GetCellValue(row, 0); {\cf20 // Retrieve the cell value from the first column}\par
00426     {\cf18 long} idlk1;\par
00427     idlk1Str.ToLong(&idlk1); {\cf20 // Convert the cell value to a long integer}\par
00428     mkVal = masterGrid->GetCellValue(row, 0);\par
00429     StaticText2->SetLabel(masterGrid->GetCellValue(row, 1));\par
00430     {\cf20 // StaticText2->SetWindowStyle(wxALIGN_CENTER);}\par
00431     {\cf20 //StaticText2->Refresh(true);}\par
00432 \par
00433 {\cf20 //    StaticText2->Center(wxBOTH);}\par
00434     LoadDetailData(idlk1); {\cf20 // Load detailed data based on the converted value}\par
00435 \}\par
00436 \par
00437 {\cf18 void} cppMD01Frame::OnDetailGridCellClick(wxGridEvent& event)\par
00438 \{\par
00439     {\cf20 //row = event.GetRow(); // Get the row index of the clicked cell}\par
00440 {\cf20 //    wxString idlk1Str = detailGrid->GetCellValue(row, 0); // Retrieve the cell value from the first column}\par
00441     {\cf20 //long idlk1;}\par
00442     {\cf20 //idlk1Str.ToLong(&idlk1); // Convert the cell value to a long integer}\par
00443     {\cf20 //mkVal = masterGrid->GetCellValue(row, 0);}\par
00444     {\cf20 //StaticText2->SetLabel(masterGrid->GetCellValue(row, 1));}\par
00445     {\cf20 // StaticText2->SetWindowStyle(wxALIGN_CENTER);}\par
00446     {\cf20 //StaticText2->Refresh(true);}\par
00447 \par
00448 {\cf20 //    StaticText2->Center(wxBOTH);}\par
00449     {\cf20 //LoadDetailData(idlk1); // Load detailed data based on the converted value}\par
00450 \}\par
00451 \par
00452 {\cf18 void} cppMD01Frame::OnMasterGridPopup(wxGridEvent& event)\par
00453 \{\par
00454     PopupMenu(&pumMaster);\par
00455 \par
00456 \}\par
00457 {\cf18 void} cppMD01Frame::OnDetailGridPopup(wxGridEvent& event)\par
00458 \{\par
00459     PopupMenu(&pumDetail);\par
00460 \par
00461 \}\par
00462 \par
00463 {\cf18 void} cppMD01Frame::OnmenSelectCppSelected(wxCommandEvent& event)\par
00464 \{\par
00465     boost::filesystem::path p({\cf22 "/home/archman/workspace/cb/cpp/cppMD01/cppMD01.cpp"});\par
00466 \par
00467     std::cout << {\cf22 "Root name: "} << p.root_name() << {\cf23 '\\n'};\par
00468     std::cout << {\cf22 "Root directory: "} << p.root_directory() << {\cf23 '\\n'};\par
00469     std::cout << {\cf22 "Root path: "} << p.root_path() << {\cf23 '\\n'};\par
00470     std::cout << {\cf22 "Relative path: "} << p.relative_path() << {\cf23 '\\n'};\par
00471     std::cout << {\cf22 "Parent path: "} << p.parent_path() << {\cf23 '\\n'};\par
00472     std::cout << {\cf22 "Filename: "} << p.filename() << {\cf23 '\\n'};\par
00473     std::cout << {\cf22 "Extension: "} << p.extension() << {\cf23 '\\n'};\par
00474 \par
00475     wxFileDialog openFileDialog({\cf17 this}, _({\cf22 "Open file"}), {\cf22 ""}, {\cf22 ""},\par
00476                                 {\cf22 "c++ files (*.cpp)|*.*"}, wxFD_OPEN | wxFD_FILE_MUST_EXIST);\par
00477 \par
00478     {\cf19 if} (openFileDialog.ShowModal() == wxID_OK)\par
00479     \{\par
00480         wxString filePath = openFileDialog.GetPath();\par
00481         wxString fileName = openFileDialog.GetFilename();\par
00482 \par
00483         wxLogMessage({\cf22 "File selected: %s"}, filePath);\par
00484         std::string path = {\cf22 "/home/user/documents/file.txt"};\par
00485         std::vector<std::string> result;\par
00486         {\cf20 /*}\par
00487 {\cf20                 // Use boost::filesystem to get the path components}\par
00488 {\cf20                 boost::filesystem::path p(path);}\par
00489 {\cf20 }\par
00490 {\cf20                 for (const auto& part : p)}\par
00491 {\cf20                 \{}\par
00492 {\cf20                     result.push_back(part.string());}\par
00493 {\cf20                 \}}\par
00494 {\cf20 }\par
00495 {\cf20                 // Output the exploded path components}\par
00496 {\cf20                 for (const auto& part : result)}\par
00497 {\cf20                 \{}\par
00498 {\cf20                     std::cout << part << std::endl;}\par
00499 {\cf20                 \}}\par
00500 {\cf20                 */}\par
00501 \par
00502 \par
00503     \}\par
00504 \}\par
00505 \par
00506 {\cf18 void} cppMD01Frame::ListFiles({\cf17 const} wxString& dir, {\cf17 const} wxString& filespec)\par
00507 \{\par
00508     wxArrayString *fileList;\par
00509     fileList->Clear();\par
00510 \par
00511     fs::path path = std::string(dir.mb_str());\par
00512     std::string spec = std::string(filespec.mb_str());\par
00513 \par
00514     {\cf19 if} (fs::exists(path) && fs::is_directory(path))\par
00515     \{\par
00516         {\cf19 for} ({\cf17 const} {\cf17 auto}& entry : fs::directory_iterator(path))\par
00517         \{\par
00518             {\cf19 if} (fs::is_regular_file(entry))\par
00519             \{\par
00520                 std::string filename = entry.path().filename().string();\par
00521 \par
00522                 {\cf20 // Apply filespec filtering}\par
00523                 {\cf19 if} (boost::iends_with(filename, spec.substr(1)))    {\cf20 // "*.ext" -> "ext"}\par
00524                 \{\par
00525                     fileList->Add(wxString::FromUTF8(filename));\par
00526                 \}\par
00527             \}\par
00528         \}\par
00529     \}\par
00530 \}\par
00531 \par
00532 {\cf18 void} cppMD01Frame::OnpumAddDocsSelected(wxCommandEvent& event)\par
00533 \{\par
00534     dlgXqt2 dlg(NULL, wxID_ANY);\par
00535     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00536     \{\par
00537         {\cf19 switch} (dlg.isel)\par
00538         \{\par
00539         {\cf19 case} 0:\par
00540             procLink();\par
00541             {\cf19 break};\par
00542         {\cf19 case} 1:\par
00543             procPdf();\par
00544             {\cf19 break};\par
00545         {\cf19 case} 2:\par
00546             procDoc();\par
00547             {\cf19 break};\par
00548         {\cf19 case} 3:\par
00549             procExe();\par
00550             {\cf19 break};\par
00551         {\cf19 default}:\par
00552             {\cf20 //   to be executed if expression doesn't match any constant}\par
00553             {\cf19 break};\par
00554         \}\par
00555     \}\par
00556 \}\par
00557 \par
00558 {\cf18 void} cppMD01Frame::procLink()\par
00559 \{\par
00560     dlgNewLink dlg(NULL, wxID_ANY);\par
00561     zrdb.initField(mkVal,dlg.edtPrim);\par
00562 \par
00563     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00564     \{\par
00565         RefreshDetails();\par
00566     \}\par
00567 \}\par
00568 \par
00569 {\cf18 void} cppMD01Frame::procPdf()\par
00570 \{\par
00571     dlgNewLink dlg(NULL, wxID_ANY);\par
00572     zrdb.initField(mkVal,dlg.edtPrim);\par
00573     {\cf18 int} flags = wxFD_OPEN | wxFD_FILE_MUST_EXIST | wxFD_DEFAULT_STYLE;\par
00574     zrdb.initField(gui01.openFileDialog(NULL, {\cf22 "Select A File"}, {\cf22 "/home/archman/Documents"}, {\cf22 ""}, {\cf22 "*.pdf"}, flags),dlg.edtLink);\par
00575     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00576     \{\par
00577 \par
00578     \}\par
00579     RefreshDetails();\par
00580 \}\par
00581 \par
00582 {\cf18 void} cppMD01Frame::procDoc()\par
00583 \{\par
00584     dlgNewLink dlg(NULL, wxID_ANY);\par
00585     zrdb.initField(mkVal,dlg.edtPrim);\par
00586     {\cf18 int} flags = wxFD_OPEN | wxFD_FILE_MUST_EXIST | wxFD_DEFAULT_STYLE;\par
00587     zrdb.initField(gui01.openFileDialog(NULL, {\cf22 "Select A Document"}, {\cf22 "/home/archman/Documents"}, {\cf22 ""}, {\cf22 "*.odt"}, flags),dlg.edtLink);\par
00588     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00589     \{\par
00590 \par
00591     \}\par
00592     RefreshDetails();\par
00593 \}\par
00594 \par
00595 {\cf18 void} cppMD01Frame::procExe()\par
00596 \{\par
00597     dlgNewLink dlg(NULL, wxID_ANY);\par
00598     zrdb.initField(mkVal,dlg.edtPrim);\par
00599     {\cf18 int} flags = wxFD_OPEN | wxFD_FILE_MUST_EXIST | wxFD_DEFAULT_STYLE;\par
00600     zrdb.initField(gui01.openFileDialog(NULL, {\cf22 "Select A File"}, {\cf22 "/home/archman/workspace/cb/cpp"}, {\cf22 ""}, {\cf22 ""}, flags),dlg.edtLink);\par
00601     zrdb.initField(mkVal,dlg.edtPrim);\par
00602     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00603     \{\par
00604        mkVal = mkVal;\par
00605     \}\par
00606     RefreshDetails();\par
00607 \}\par
00608 \par
00609 {\cf18 void} cppMD01Frame::RefreshDetails()\par
00610 \{\par
00611     zrdb.listLinks(std::stoi(mkVal), dRID);\par
00612     LoadDetailData(dRID);\par
00613     {\cf20 //StatusBar1->Refresh(true);}\par
00614 \par
00615     {\cf20 /*}\par
00616 {\cf20     ListBox2->Clear();}\par
00617 {\cf20     zrdb.listLinks(std::stoi(mkVal), dRID);}\par
00618 {\cf20     for (size_t i=0; i < zrdb.zres.num_rows(); i++)}\par
00619 {\cf20     \{}\par
00620 {\cf20         ListBox2->Append(zrdb.lk2[i]);}\par
00621 {\cf20     \}}\par
00622 {\cf20     string zlabel = std::to_string(zrdb.zres.num_rows()) + " Records Retrieved";}\par
00623 {\cf20     lblStatus->SetLabel(zlabel);}\par
00624 {\cf20     //    lblStatus->Label = zlabel;}\par
00625 {\cf20     //    lblStatus->Update();}\par
00626 {\cf20     //    lblStatus->Refresh();Blog}\par
00627 {\cf20     */}\par
00628 \}\par
00629 \par
00630 {\cf18 void} cppMD01Frame::OnpumNewCatSelected(wxCommandEvent& event)\par
00631 \{\par
00632     dlgNewCat dlg(NULL,wxID_ANY);\par
00633 {\cf20 //    zrdb.initField(mkVal,dlg.edtPrim);}\par
00634 {\cf20 //    int flags = wxFD_OPEN | wxFD_FILE_MUST_EXIST | wxFD_DEFAULT_STYLE;}\par
00635 {\cf20 //    zrdb.initField(gui01.openFileDialog(NULL, "Select A File", "/home/archman/workspace/cb/cpp", "", "", flags),dlg.edtLink);}\par
00636     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00637     \{\par
00638 \par
00639     \}\par
00640     RefreshDetails();\par
00641 \}\par
00642 \par
00643 {\cf18 void} cppMD01Frame::OnpumNewBlogPostSelected(wxCommandEvent& event)\par
00644 \{\par
00645     {\cf17 const} {\cf18 char} * c;\par
00646     {\cf18 string} tbuf;\par
00647     tbuf = {\cf22 "<a href=\\"https://archman.us\\" target=\\"_blank\\" rel=\\"noopener\\">"};\par
00648     tbuf = tbuf + {\cf22 "    <img src=\\"https://archman.us/images/usa_3a.gif\\" alt=\\"USA\\" />"};\par
00649     tbuf = tbuf + {\cf22 "</a>\\n\\n"};\par
00650     {\cf20 //tbuf = "<img src=\\"http://archman.us/images/usa_3a.gif\\" alt=\\"\\" />\\n\\n";}\par
00651     tbuf = tbuf + {\cf22 "Mr. <a href=\\"https://archman.us\\" target=\\"_blank\\" rel=\\"noopener\\">Arch Brooks</a>, Software Engineer, Brooks Computing Systems, LLC authored this article."};\par
00652     {\cf19 if} (wxTheClipboard->Open())\par
00653     \{\par
00654         {\cf20 // This data objects are held by the clipboard,}\par
00655         {\cf20 // so do not delete them in the app.}\par
00656         c = tbuf.c_str();\par
00657         wxTheClipboard->SetData({\cf17 new} wxTextDataObject(c));\par
00658         wxTheClipboard->Close();\par
00659     \}\par
00660 \par
00661 \par
00662     cmd = defBro + {\cf22 " "} + {\cf22 "https://archman.us/b4/wp-admin/post-new.php & "};\par
00663     system(cmd.c_str());\par
00664 \}\par
00665 \par
00666 {\cf18 void} cppMD01Frame::OnpumDelLinkSelected(wxCommandEvent& event)\par
00667 \{\par
00668 {\cf20 //    std::string detailtem = ListBox2->GetStringSelection().ToStdString();}\par
00669 {\cf20 //    std::string detailtem = detailGrid->GetRowAt(row);}\par
00670     std::string cap;\par
00671     wxString idlk1Str = detailGrid->GetCellValue(row, 0);\par
00672     std::string detailItem = detailGrid->GetCellValue(row, 0).ToStdString();\par
00673     std::string linkName = detailGrid->GetCellValue(row, 1).ToStdString();\par
00674     {\cf20 //std::string recNo = detailtem.substr(0, detailtem.find(" "));}\par
00675     cap = {\cf22 "Are You sure You would like to delete\\n\\""} + detailItem + {\cf22 " "} + linkName + {\cf22 "\\"?"};\par
00676     {\cf19 if} (gui01.yornQues(cap, {\cf22 "Delete This Record?"}) == wxYES)\par
00677     \{\par
00678         zrdb.DeleteLink(detailItem);\par
00679         RefreshDetails();\par
00680     \}\par
00681 \}\par
00682 \par
00683 {\cf18 void} cppMD01Frame::OnpumEdCatSelected(wxCommandEvent& event)\par
00684 \{\par
00685     dlgNewCat dlg(NULL, wxID_ANY);\par
00686 {\cf20 //    std::string detailtem = ListBox1->GetStringSelection().ToStdString();}\par
00687 {\cf20 //    std::string recNo = detailtem.substr(0, detailtem.find(" "));}\par
00688     std::string recNo = detailGrid->GetCellValue(row, 0).ToStdString();\par
00689     zrdb.strIdlk1 = recNo;\par
00690     dlg.btnInsert->SetLabel( {\cf22 "Edit"});\par
00691     zrdb.getCat();\par
00692     zrdb.initField(masterGrid->GetCellValue(row, 1).ToStdString(), dlg.edtCat);\par
00693     zrdb.initField(masterGrid->GetCellValue(row, 2).ToStdString(), dlg.edtMemo);\par
00694 {\cf20 //    zrdb.initField(std::string(zrdb.zres[0]["cat"]), dlg.edtCat);}\par
00695 {\cf20 //    zrdb.initField(std::string(zrdb.zres[0]["ddes"]), dlg.edtMemo);}\par
00696     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00697     \{\par
00698         zrdb.editCat(zrdb.strIdlk1, zrdb.fieldToString(dlg.edtCat), zrdb.fieldToString(dlg.edtMemo));\par
00699     \}\par
00700     zrdb.listCategories({\cf17 false});\par
00701 {\cf20 //    RefreshCats();}\par
00702     PopulateMasterGrid();\par
00703 \}\par
00704 \par
00705 {\cf18 void} cppMD01Frame::OnpumEditLinkSelected(wxCommandEvent& event)\par
00706 \{\par
00707 {\cf20 //        std::string detailtem = ListBox2->GetStringSelection().ToStdString();}\par
00708 {\cf20 //    std::string recNo = detailtem.substr(0, detailtem.find(" "));}\par
00709 {\cf20 //    recNo = detailGrid->GetCellValue(row, 0).ToStdString();}\par
00710     recNo = detailGrid->GetCellValue(row, 0).ToStdString();\par
00711 \par
00712     zrdb.insertMode = {\cf17 false};\par
00713 {\cf20 //    zrdb.getLink(std::stoi(detailtem.substr(0, detailtem.find(" "))));}\par
00714     dlgNewLink dlg(NULL, wxID_ANY);\par
00715 {\cf20 //    string sbuf = std::string(ares[i]["idlk2"]) + " " + std::string(ares[i]["lkn"]);}\par
00716     zrdb.initField(detailGrid->GetCellValue(row, 0).ToStdString(), dlg.edtPrim);\par
00717     zrdb.initField(detailGrid->GetCellValue(row, 1).ToStdString(), dlg.edtLinkName);\par
00718     zrdb.initField(detailGrid->GetCellValue(row, 2).ToStdString(), dlg.edtLink);\par
00719     zrdb.initField(detailGrid->GetCellValue(row, 3).ToStdString(), dlg.edtDetDes);\par
00720     dlg.btnInset->SetLabel( {\cf22 "Edit"});\par
00721     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00722     \{\par
00723         zrdb.editLink(recNo,zrdb.fieldToString(dlg.edtPrim), zrdb.fieldToString(dlg.edtLink), zrdb.fieldToString(dlg.edtLinkName), zrdb.fieldToString(dlg.edtDetDes), zrdb.strIdlk1);\par
00724         RefreshDetails();\par
00725     \}\par
00726 \}\par
00727 \par
00728 {\cf18 void} cppMD01Frame::OnpumEditDetailsSelected(wxCommandEvent& event)\par
00729 \{\par
00730 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01Main.h File Reference\par \pard\plain 
{\tc\tcl2 \v cppMD01Main.h}
{\xe \v cppMD01Main.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <mysql++.h>}\par
{\f2 #include <wx/grid.h>}\par
{\f2 #include "dlgXqt2.h"}\par
{\f2 #include <wx/frame.h>}\par
{\f2 #include <wx/menu.h>}\par
{\f2 #include <wx/panel.h>}\par
{\f2 #include <wx/scrolwin.h>}\par
{\f2 #include <wx/sizer.h>}\par
{\f2 #include <wx/stattext.h>}\par
{\f2 #include <wx/statusbr.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b cppMD01Frame}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cppMD01Main.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /***************************************************************}\par
00002 {\cf20  * Name:      cppMD01Main.h}\par
00003 {\cf20  * Purpose:   Defines Application Frame}\par
00004 {\cf20  * Author:    Mr. Arch Brooks (arch@archbrooks.com)}\par
00005 {\cf20  * Created:   Sunday, 08 September 2024 07:26:59}\par
00006 {\cf20  * Copyright: Mr. Arch Brooks (https://archman.us)}\par
00007 {\cf20  * License:}\par
00008 {\cf20  **************************************************************/}\par
00009 \par
00010 {\cf21 #ifndef CPPMYSKEL1MAIN_H}\par
00011 {\cf21 #define CPPMYSKEL1MAIN_H}\par
00012 {\cf21 #include <mysql++.h>}\par
00013 {\cf21 #include <wx/grid.h>}\par
00014 {\cf21 #include "dlgXqt2.h"}\par
00015 \par
00016 {\cf20 //(*Headers(cppMD01Frame)}\par
00017 {\cf21 #include <wx/frame.h>}\par
00018 {\cf21 #include <wx/menu.h>}\par
00019 {\cf21 #include <wx/panel.h>}\par
00020 {\cf21 #include <wx/scrolwin.h>}\par
00021 {\cf21 #include <wx/sizer.h>}\par
00022 {\cf21 #include <wx/stattext.h>}\par
00023 {\cf21 #include <wx/statusbr.h>}\par
00024 {\cf20 //*)}\par
00025 \par
00026 {\cf17 class }cppMD01Frame: {\cf17 public} wxFrame\par
00027 \{\par
00028 {\cf17 public}:\par
00029 \par
00030     cppMD01Frame(wxWindow* parent,wxWindowID {\cf18 id} = -1);\par
00031     {\cf17 virtual} ~cppMD01Frame();\par
00032     mysqlpp::Connection conn;\par
00033     wxGrid* masterGrid;\par
00034     wxGrid* detailGrid;\par
00035     std::string cmd;\par
00036     std::string mkVal;\par
00037 \par
00038 {\cf17 private}:\par
00039     {\cf18 void} PopulateMasterGrid();\par
00040     {\cf18 void} LoadDetailData({\cf18 long} idlk1);\par
00041     {\cf18 void} OnMasterGridCellClick(wxGridEvent& event);\par
00042     {\cf18 void} OnCellClick(wxGridEvent& event);\par
00043     {\cf18 void} OnMasterGridPopup(wxGridEvent& event);\par
00044     {\cf18 void} OnDetailGridPopup(wxGridEvent& event);\par
00045     {\cf18 void} ListFiles({\cf17 const} wxString& dir, {\cf17 const} wxString& filespec);\par
00046     {\cf18 void} procLink();\par
00047     {\cf18 void} procPdf();\par
00048     {\cf18 void} procDoc();\par
00049     {\cf18 void} procExe();\par
00050     {\cf18 void} RefreshDetails();\par
00051     {\cf18 bool} dRID = {\cf17 false};\par
00052 {\cf20 //    void OnpumNewBlogPostSelected(wxCommandEvent& event);}\par
00053     std::string defBro = {\cf22 "/usr/bin/brave"};\par
00054     {\cf18 int} row;\par
00055     {\cf18 void} OnDetailGridCellClick(wxGridEvent& event);\par
00056     std::string recNo;\par
00057 \par
00058     {\cf20 //void LoadDetailData(int idlk1);}\par
00059 \par
00060     {\cf20 //(*Handlers(cppMD01Frame)}\par
00061     {\cf18 void} OnQuit(wxCommandEvent& event);\par
00062     {\cf18 void} OnAbout(wxCommandEvent& event);\par
00063     {\cf18 void} OnmenSelectCppSelected(wxCommandEvent& event);\par
00064     {\cf18 void} OnpumAddDocsSelected(wxCommandEvent& event);\par
00065     {\cf18 void} OnpumNewCatSelected(wxCommandEvent& event);\par
00066     {\cf18 void} OnpumNewBlogPostSelected(wxCommandEvent& event);\par
00067     {\cf18 void} OnpumDelLinkSelected(wxCommandEvent& event);\par
00068     {\cf18 void} OnpumEdCatSelected(wxCommandEvent& event);\par
00069     {\cf18 void} OnpumEditLinkSelected(wxCommandEvent& event);\par
00070     {\cf18 void} OnpumEditDetailsSelected(wxCommandEvent& event);\par
00071     {\cf20 //*)}\par
00072 \par
00073     {\cf20 //(*Identifiers(cppMD01Frame)}\par
00074     {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT1;\par
00075     {\cf17 static} {\cf17 const} {\cf18 long} ID_PANEL1;\par
00076     {\cf17 static} {\cf17 const} {\cf18 long} ID_PANEL3;\par
00077     {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT2;\par
00078     {\cf17 static} {\cf17 const} {\cf18 long} ID_SCROLLEDWINDOW1;\par
00079     {\cf17 static} {\cf17 const} {\cf18 long} idMenucpp;\par
00080     {\cf17 static} {\cf17 const} {\cf18 long} idMenuQuit;\par
00081     {\cf17 static} {\cf17 const} {\cf18 long} idMenuAbout;\par
00082     {\cf17 static} {\cf17 const} {\cf18 long} ID_STATUSBAR1;\par
00083     {\cf17 static} {\cf17 const} {\cf18 long} ID_MENUITEM1;\par
00084     {\cf17 static} {\cf17 const} {\cf18 long} idpumNewCat;\par
00085     {\cf17 static} {\cf17 const} {\cf18 long} ID_PumEdCat;\par
00086     {\cf17 static} {\cf17 const} {\cf18 long} ID_NewBlog;\par
00087     {\cf17 static} {\cf17 const} {\cf18 long} ID_MENUITEM2;\par
00088     {\cf17 static} {\cf17 const} {\cf18 long} ID_menAD;\par
00089     {\cf17 static} {\cf17 const} {\cf18 long} ID_menNB;\par
00090     {\cf17 static} {\cf17 const} {\cf18 long} ID_pumDel;\par
00091     {\cf17 static} {\cf17 const} {\cf18 long} ID_pumEditLink;\par
00092     {\cf20 //*)}\par
00093 \par
00094     {\cf20 //(*Declarations(cppMD01Frame)}\par
00095     wxMenu pumDetail;\par
00096     wxMenu pumMaster;\par
00097     wxMenuItem* MenuItem3;\par
00098     wxMenuItem* MenuItem4;\par
00099     wxMenuItem* MenuItem5;\par
00100     wxMenuItem* menNewPost;\par
00101     wxMenuItem* menSelectCpp;\par
00102     wxMenuItem* pumAddDocs;\par
00103     wxMenuItem* pumDelLink;\par
00104     wxMenuItem* pumEditDetails;\par
00105     wxMenuItem* pumNewBlogPost;\par
00106     wxMenuItem* pumNewCat;\par
00107     wxPanel* Panel1;\par
00108     wxPanel* Panel2;\par
00109     wxScrolledWindow* ScrolledWindow1;\par
00110     wxStaticText* StaticText1;\par
00111     wxStaticText* StaticText2;\par
00112     wxStatusBar* StatusBar1;\par
00113     {\cf20 //*)}\par
00114 \par
00115     DECLARE_EVENT_TABLE()\par
00116 \};\par
00117 \par
00118 {\cf21 #endif }{\cf20 // CPPMYSKEL1MAIN_H}\par
00119 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
curlStuff.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v curlStuff.cpp}
{\xe \v curlStuff.cpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "curlStuff.h"}\par
{\f2 #include <string>}\par
{\f2 #include <curl/curl.h>}\par
{\f2 #include <fstream>}\par
{\f2 #include <ios>}\par
{\f2 #include <strstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <iostream>}\par
{\f2 #include <curl/easy.h>}\par
{\f2 #include <boost/algorithm/string.hpp>}\par
{\f2 #include <wx/clipbrd.h>}\par
{\f2 #include <wx/msgdlg.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CURLcode {\b curl_read} (const std::string &url, std::ostream &os, long timeout=30)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v curl_read\:curlStuff.cpp}
{\xe \v curlStuff.cpp\:curl_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CURLcode curl_read (const std::string & url, std::ostream & os, long timeout = {\f2 30})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b curlStuff.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
curlStuff.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "curlStuff.h"}\par
00002 {\cf21 #include <string>}\par
00003 {\cf21 #include <curl/curl.h>}\par
00004 {\cf21 #include <fstream>}\par
00005 {\cf21 #include <ios>}\par
00006 {\cf21 #include <strstream>}\par
00007 {\cf21 #include <sstream>}\par
00008 {\cf21 #include <iostream>}\par
00009 {\cf21 #include <curl/easy.h>}\par
00010 {\cf21 #include <boost/algorithm/string.hpp>}\par
00011 {\cf21 #include <wx/clipbrd.h>}\par
00012 {\cf21 #include <wx/msgdlg.h>}\par
00013 \par
00014 {\cf20 //#include <streambuf>}\par
00015 \par
00016 {\cf20 //using namespace std;}\par
00017 \par
00018 curlStuff::curlStuff()\par
00019 \{\par
00020     {\cf20 //ctor}\par
00021 \}\par
00022 \par
00023 curlStuff::~curlStuff()\par
00024 \{\par
00025     {\cf20 //DlgTstFramedtor}\par
00026 \}\par
00027 \par
00028 {\cf17 static} {\cf18 size_t} data_write({\cf18 void}* buf, {\cf18 size_t} size, {\cf18 size_t} nmemb, {\cf18 void}* userp)\par
00029 \{\par
00030     {\cf19 if} (userp)\par
00031     \{\par
00032         std::ostream& os = *{\cf17 static_cast<}std::ostream*{\cf17 >}(userp);\par
00033         std::streamsize len = size * nmemb;\par
00034         {\cf19 if} (os.write({\cf17 static_cast<}{\cf18 char}*{\cf17 >}(buf), len))\par
00035             {\cf19 return} len;\par
00036     \}\par
00037 \par
00038     {\cf19 return} 0;\par
00039 \}\par
00040 \par
00041 CURLcode curl_read({\cf17 const} std::string& url, std::ostream& os,\par
00042                    {\cf18 long} timeout = 30)\par
00043 \{\par
00044     CURLcode code(CURLE_FAILED_INIT);\par
00045     CURL* curl = curl_easy_init();\par
00046 \par
00047     {\cf19 if} (curl)\par
00048     \{\par
00049         {\cf19 if} (CURLE_OK\par
00050                 == (code = curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION,\par
00051                                             &data_write)) && CURLE_OK\par
00052                 == (code = curl_easy_setopt(curl, CURLOPT_NOPROGRESS,\par
00053                                             1L)) && CURLE_OK\par
00054                 == (code = curl_easy_setopt(curl,\par
00055                                             CURLOPT_SSL_VERIFYHOST, 0L))\par
00056 {\cf20 //               && CURLE_OK}\par
00057 {\cf20 //                == (code = curl_easy_setopt(curl,curl_read}\par
00058 {\cf20 //                                           CURLOPT_FOLLOWLOCATION, 1L))}\par
00059                 && CURLE_OK\par
00060                 == (code = curl_easy_setopt(curl, CURLOPT_FILE, &os))\par
00061                 && CURLE_OK\par
00062                 == (code = curl_easy_setopt(curl, CURLOPT_TIMEOUT,\par
00063                                             timeout)) && CURLE_OK == (code =\par
00064                                                     curl_easy_setopt(curl, CURLOPT_URL, url.c_str())))\par
00065         \{\par
00066 {\cf20 //                                              curl_easy_setopt(curl, CURLOPT_SSL_VERIFYHOST, false);}\par
00067 \par
00068             code = curl_easy_perform(curl);\par
00069         \}\par
00070         curl_easy_cleanup(curl);\par
00071     \}\par
00072     {\cf19 return} code;\par
00073 \}\par
00074 \par
00075 \par
00076 std::string curlStuff::getZTitle(std::string url)\par
00077 \{\par
00078     std::string retVal;\par
00079     std::string rbuf;\par
00080     curl_global_init (CURL_GLOBAL_ALL);\par
00081     {\cf18 int} ii;\par
00082     {\cf20 /*}\par
00083 {\cf20      * We use Curl to fetch the web page per the URL.}\par
00084 {\cf20      *}\par
00085 {\cf20      * A string stream is used to hold the web page}\par
00086 {\cf20      *}\par
00087 {\cf20      */}\par
00088 \par
00089     std::ostringstream oss;\par
00090     {\cf19 if} (CURLE_OK == curl_read(url, oss))\par
00091     \{\par
00092         {\cf20 // Web page successfully written to string}\par
00093         {\cf18 int} ista;\par
00094         {\cf18 int} isto;\par
00095         std::string html;\par
00096         html = oss.str();\par
00097         std::ofstream file({\cf22 "filename.txt"});\par
00098         file << oss.str();\par
00099 \par
00100         std::string sb;\par
00101         std::string se;\par
00102 {\cf20 //              ista = html.find("TITLE");}\par
00103 {\cf20 //              if ((ista != -1) and (ista < html.length())) \{}\par
00104 {\cf20 //                      sb = "<TITLE>";}\par
00105 {\cf20 //                      se = "</TITLE>";}\par
00106 {\cf20 //              \} else \{}\par
00107         sb = {\cf22 "<title>"};\par
00108         se = {\cf22 "</title>"};\par
00109 {\cf20 //              \}}\par
00110         ista = html.find(sb);\par
00111         {\cf18 int} rest;\par
00112         rest = 0;\par
00113 {\cf20 //              sb = "<title";}\par
00114 {\cf20 //              se = "</title>";}\par
00115         ista = html.find(sb);\par
00116 {\cf20 //              if (ista > -1) \{}\par
00117 {\cf20 //                      isto = html.find(">");}\par
00118 {\cf20 //                      rest = (isto - (ista + 6));}\par
00119 {\cf20 //              \}}\par
00120 {\cf20 //              ista = ista + sb.length() + rest;}\par
00121         ista = ista + 7;\par
00122         isto = html.find(se);\par
00123         {\cf18 int} ilen;\par
00124         ilen = isto - ista;\par
00125 {\cf20 //        char buffer[5000] = \{ 0 \};}\par
00126 {\cf20 //              html.copy(html, ista, ilen);}\par
00127         rbuf = html.substr(ista, ilen);\par
00128         std::string frs = {\cf22 ""};\par
00129         std::string tos = {\cf22 ""};\par
00130         frs = {\cf22 "&quot;"};\par
00131         tos = {\cf23 '"'};\par
00132         boost::replace_all(rbuf, frs, tos);\par
00133         frs = {\cf22 "&#39;"};\par
00134         tos = {\cf22 "'"};\par
00135         boost::replace_all(rbuf, frs, tos);\par
00136         {\cf19 if} (ilen > 500)\par
00137         \{\par
00138             rbuf = {\cf22 "Dummy Title"};\par
00139 \par
00140         \}\par
00141         {\cf19 else}\par
00142         \{\par
00143 {\cf20 //                      rbuf = html.substr(ista, ilen);}\par
00144         \}\par
00145         ilen = ilen; {\cf20 // @suppress("Assignment to itself")}\par
00146 \par
00147         {\cf20 /*}\par
00148 {\cf20          * The Boost tokenizer is used to parse the string stream into lines of code}\par
00149 {\cf20          */}\par
00150 {\cf20 //              ii = strToLine(html);}\par
00151 {\cf20 //              lcnt = ii;}\par
00152         {\cf20 /*}\par
00153 {\cf20          * This routine reads the lines of code until the <Title> tag is encountered.}\par
00154 {\cf20          *}\par
00155 {\cf20          * The line containing the title tag is trimmed on both sides.}\par
00156 {\cf20          *}\par
00157 {\cf20          * The HTML tags are discarded leaving us with the title for the web page.}\par
00158 {\cf20          *}\par
00159 {\cf20          * Retval contains the web pate title.}\par
00160 {\cf20          *}\par
00161 {\cf20          */}\par
00162 {\cf20 //              retVal = getTitle(ii);}\par
00163 \par
00164     \}\par
00165     curl_global_cleanup();\par
00166     {\cf19 return} rbuf;\par
00167 \}\par
00168 \par
00169 std::string curlStuff::getURL()   {\cf20 // @suppress("No return")}\par
00170 \{\par
00171 \par
00172     std::string buf;\par
00173     {\cf19 if} (wxTheClipboard->Open())\par
00174     \{\par
00175         {\cf19 if} (wxTheClipboard->IsSupported(wxDF_TEXT))\par
00176         \{\par
00177             wxTextDataObject data;\par
00178             wxTheClipboard->GetData(data);\par
00179             buf = data.GetText();\par
00180             {\cf20 //          wxMessageBox( data.GetText() );}\par
00181 \par
00182         \}\par
00183         wxTheClipboard->Close();\par
00184         {\cf19 return} buf;\par
00185         {\cf20 //              type filter text}\par
00186     \}\par
00187 \}\par
00188 \par
00189 std::string curlStuff::clipUrl()\par
00190 \{\par
00191     cbc = getURL();\par
00192     cbc = cbc;\par
00193     {\cf19 if} (cbc.find({\cf22 "http"}) < cbc.length())\par
00194     \{\par
00195         {\cf19 return} getZTitle(cbc);\par
00196     \}\par
00197     {\cf19 else}\par
00198     \{\par
00199         wxMessageBox({\cf22 "URL not Detected!"}, {\cf22 "No URL in Clipboard"}, wxICON_HAND);\par
00200         {\cf19 return} {\cf22 ""};\par
00201     \}\par
00202 \par
00203 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
curlStuff.h File Reference\par \pard\plain 
{\tc\tcl2 \v curlStuff.h}
{\xe \v curlStuff.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b curlStuff}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
curlStuff.h\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef CURLSTUFF_H}\par
00002 {\cf21 #define CURLSTUFF_H}\par
00003 {\cf21 #include<string>}\par
00004 \par
00005 \par
00006 {\cf17 class }curlStuff\par
00007 \{\par
00008     {\cf17 public}:\par
00009         curlStuff();\par
00010         {\cf17 virtual} ~curlStuff();\par
00011         std::string getZTitle(std::string url);\par
00012         std::string clipUrl();\par
00013         std::string getURL();\par
00014         std::string cbc;\par
00015 \par
00016     {\cf17 protected}:\par
00017 \par
00018     {\cf17 private}:\par
00019 \};\par
00020 \par
00021 {\cf21 #endif }{\cf20 // CURLSTUFF_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgDe01.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgDe01.cpp}
{\xe \v dlgDe01.cpp}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgDe01.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgDe01.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgDe01.h"}\par
00002 \par
00003 {\cf20 //(*InternalHeaders(dlgDe01)}\par
00004 {\cf21 #include <wx/intl.h>}\par
00005 {\cf21 #include <wx/string.h>}\par
00006 {\cf20 //*)}\par
00007 \par
00008 {\cf20 //(*IdInit(dlgDe01)}\par
00009 {\cf17 const} {\cf18 long} dlgDe01::ID_STATICTEXT1 = wxNewId();\par
00010 {\cf17 const} {\cf18 long} dlgDe01::ID_TEXTCTRL1 = wxNewId();\par
00011 {\cf17 const} {\cf18 long} dlgDe01::ID_STATICTEXT2 = wxNewId();\par
00012 {\cf17 const} {\cf18 long} dlgDe01::ID_TEXTCTRL2 = wxNewId();\par
00013 {\cf20 //*)}\par
00014 \par
00015 BEGIN_EVENT_TABLE(dlgDe01,wxDialog)\par
00016         {\cf20 //(*EventTable(dlgDe01)}\par
00017         {\cf20 //*)}\par
00018 END_EVENT_TABLE()\par
00019 \par
00020 dlgDe01::dlgDe01(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00021 \{\par
00022         {\cf20 //(*Initialize(dlgDe01)}\par
00023         wxBoxSizer* BoxSizer1;\par
00024         wxBoxSizer* BoxSizer2;\par
00025         wxBoxSizer* BoxSizer3;\par
00026         wxBoxSizer* BoxSizer4;\par
00027 \par
00028         Create(parent, {\cf18 id}, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00029         SetClientSize(wxDefaultSize);\par
00030         Move(wxDefaultPosition);\par
00031         BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00032         BoxSizer2 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00033         BoxSizer3 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00034         BoxSizer4 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00035         StaticText1 = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT1, _({\cf22 "Label"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT1"}));\par
00036         BoxSizer4->Add(StaticText1, 0, wxALL|wxEXPAND, 1);\par
00037         TextCtrl1 = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL1, _({\cf22 "Text"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL1"}));\par
00038         BoxSizer4->Add(TextCtrl1, 0, wxALL|wxEXPAND, 1);\par
00039         StaticText2 = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT2, _({\cf22 "Label"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT2"}));\par
00040         BoxSizer4->Add(StaticText2, 0, wxALL|wxEXPAND, 1);\par
00041         TextCtrl2 = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL2, _({\cf22 "Text"}), wxDefaultPosition, wxSize(194,24), 0, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL2"}));\par
00042         BoxSizer4->Add(TextCtrl2, 0, wxALL|wxEXPAND, 1);\par
00043         BoxSizer3->Add(BoxSizer4, 1, wxALL|wxEXPAND, 5);\par
00044         BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00045         BoxSizer1->Add(BoxSizer2, 1, wxALL|wxEXPAND, 5);\par
00046         SetSizer(BoxSizer1);\par
00047         BoxSizer1->Fit({\cf17 this});\par
00048         BoxSizer1->SetSizeHints({\cf17 this});\par
00049         {\cf20 //*)}\par
00050 \}\par
00051 \par
00052 dlgDe01::~dlgDe01()\par
00053 \{\par
00054         {\cf20 //(*Destroy(dlgDe01)}\par
00055         {\cf20 //*)}\par
00056 \}\par
00057 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgDe01.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgDe01.h}
{\xe \v dlgDe01.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/sizer.h>}\par
{\f2 #include <wx/stattext.h>}\par
{\f2 #include <wx/textctrl.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgDe01}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgDe01.h\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGDE01_H}\par
00002 {\cf21 #define DLGDE01_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgDe01)}\par
00005 {\cf21 #include <wx/dialog.h>}\par
00006 {\cf21 #include <wx/sizer.h>}\par
00007 {\cf21 #include <wx/stattext.h>}\par
00008 {\cf21 #include <wx/textctrl.h>}\par
00009 {\cf20 //*)}\par
00010 \par
00011 {\cf17 class }dlgDe01: {\cf17 public} wxDialog\par
00012 \{\par
00013         {\cf17 public}:\par
00014 \par
00015                 dlgDe01(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00016                 {\cf17 virtual} ~dlgDe01();\par
00017 \par
00018                 {\cf20 //(*Declarations(dlgDe01)}\par
00019                 wxStaticText* StaticText1;\par
00020                 wxStaticText* StaticText2;\par
00021                 wxTextCtrl* TextCtrl1;\par
00022                 wxTextCtrl* TextCtrl2;\par
00023                 {\cf20 //*)}\par
00024 \par
00025         {\cf17 protected}:\par
00026 \par
00027                 {\cf20 //(*Identifiers(dlgDe01)}\par
00028                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT1;\par
00029                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL1;\par
00030                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT2;\par
00031                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL2;\par
00032                 {\cf20 //*)}\par
00033 \par
00034         {\cf17 private}:\par
00035 \par
00036                 {\cf20 //(*Handlers(dlgDe01)}\par
00037                 {\cf20 //*)}\par
00038 \par
00039                 DECLARE_EVENT_TABLE()\par
00040 \};\par
00041 \par
00042 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNb01.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNb01.cpp}
{\xe \v dlgNb01.cpp}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgNb01.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01} {\b rdb}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v rdb\:dlgNb01.cpp}
{\xe \v dlgNb01.cpp\:rdb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b zDB01} rdb}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b dlgNb01.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNb01.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgNb01.h"}\par
00002 {\cf21 #include "zDB01.h"}\par
00003 \par
00004 zDB01 rdb;\par
00005 \par
00006 {\cf20 //(*InternalHeaders(dlgNb01)}\par
00007 {\cf21 #include <wx/intl.h>}\par
00008 {\cf21 #include <wx/string.h>}\par
00009 {\cf20 //*)}\par
00010 \par
00011 {\cf20 //(*IdInit(dlgNb01)}\par
00012 {\cf17 const} {\cf18 long} dlgNb01::ID_LISTBOX1 = wxNewId();\par
00013 {\cf17 const} {\cf18 long} dlgNb01::ID_PANEL1 = wxNewId();\par
00014 {\cf17 const} {\cf18 long} dlgNb01::ID_LISTBOX2 = wxNewId();\par
00015 {\cf17 const} {\cf18 long} dlgNb01::ID_PANEL2 = wxNewId();\par
00016 {\cf17 const} {\cf18 long} dlgNb01::ID_NOTEBOOK1 = wxNewId();\par
00017 {\cf20 //*)}\par
00018 \par
00019 BEGIN_EVENT_TABLE(dlgNb01,wxDialog)\par
00020     {\cf20 //(*EventTable(dlgNb01)}\par
00021     {\cf20 //*)}\par
00022 END_EVENT_TABLE()\par
00023 \par
00024 dlgNb01::dlgNb01(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00025 \{\par
00026     {\cf20 //(*Initialize(dlgNb01)}\par
00027     wxBoxSizer* BoxSizer1;\par
00028     wxBoxSizer* BoxSizer2;\par
00029     wxBoxSizer* BoxSizer3;\par
00030     wxBoxSizer* BoxSizer4;\par
00031     wxBoxSizer* BoxSizer5;\par
00032 \par
00033     Create(parent, {\cf18 id}, _({\cf22 "Favorite Links App"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00034     SetClientSize(wxSize(365,250));\par
00035     Move(wxDefaultPosition);\par
00036     BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00037     BoxSizer2 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00038     BoxSizer3 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00039     nbk01 = {\cf17 new} wxNotebook({\cf17 this}, ID_NOTEBOOK1, wxDefaultPosition, wxSize(232,142), wxNB_BOTTOM, _T({\cf22 "ID_NOTEBOOK1"}));\par
00040     Panel1 = {\cf17 new} wxPanel(nbk01, ID_PANEL1, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T({\cf22 "ID_PANEL1"}));\par
00041     BoxSizer4 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00042     lbxCats = {\cf17 new} wxListBox(Panel1, ID_LISTBOX1, wxDefaultPosition, wxDefaultSize, 0, 0, 0, wxDefaultValidator, _T({\cf22 "ID_LISTBOX1"}));\par
00043     BoxSizer4->Add(lbxCats, 1, wxALL|wxEXPAND, 5);\par
00044     Panel1->SetSizer(BoxSizer4);\par
00045     BoxSizer4->Fit(Panel1);\par
00046     BoxSizer4->SetSizeHints(Panel1);\par
00047     Panel2 = {\cf17 new} wxPanel(nbk01, ID_PANEL2, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T({\cf22 "ID_PANEL2"}));\par
00048     BoxSizer5 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00049     lbxLinks = {\cf17 new} wxListBox(Panel2, ID_LISTBOX2, wxDefaultPosition, wxSize(340,180), 0, 0, 0, wxDefaultValidator, _T({\cf22 "ID_LISTBOX2"}));\par
00050     BoxSizer5->Add(lbxLinks, 1, wxALL|wxEXPAND, 5);\par
00051     Panel2->SetSizer(BoxSizer5);\par
00052     BoxSizer5->Fit(Panel2);\par
00053     BoxSizer5->SetSizeHints(Panel2);\par
00054     nbk01->AddPage(Panel1, _({\cf22 "Categories"}), {\cf17 false});\par
00055     nbk01->AddPage(Panel2, _({\cf22 "Links"}), {\cf17 false});\par
00056     BoxSizer3->Add(nbk01, 1, wxALL|wxEXPAND, 5);\par
00057     BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00058     BoxSizer1->Add(BoxSizer2, 1, wxALL|wxEXPAND, 5);\par
00059     SetSizer(BoxSizer1);\par
00060     SetSizer(BoxSizer1);\par
00061     Layout();\par
00062 \par
00063     Connect(ID_LISTBOX1,wxEVT_COMMAND_LISTBOX_SELECTED,(wxObjectEventFunction)&dlgNb01::OnlbxCatsSelect);\par
00064     Connect(ID_LISTBOX1,wxEVT_COMMAND_LISTBOX_DOUBLECLICKED,(wxObjectEventFunction)&dlgNb01::OnlbxCatsDClick);\par
00065     Connect(ID_LISTBOX2,wxEVT_COMMAND_LISTBOX_DOUBLECLICKED,(wxObjectEventFunction)&dlgNb01::OnlbxLinksDClick);\par
00066     {\cf20 //*)}\par
00067 \}\par
00068 \par
00069 dlgNb01::~dlgNb01()\par
00070 \{\par
00071     {\cf20 //(*Destroy(dlgNb01)}\par
00072     {\cf20 //*)}\par
00073 \}\par
00074 \par
00075 \par
00076 {\cf18 void} dlgNb01::OnlbxCatsSelect(wxCommandEvent& event)\par
00077 \{\par
00078 \}\par
00079 \par
00080 {\cf18 void} dlgNb01::OnlbxCatsDClick(wxCommandEvent& event)\par
00081 \{\par
00082     std::string zcat = {\cf17 event}.GetString().ToStdString();\par
00083     rdb.listLinks(std::stoi(zcat.substr(0, zcat.find({\cf22 " "}))), {\cf17 false});\par
00084     lbxLinks->Clear();\par
00085     lbxLinks->InsertItems(rdb.lk2, 0);\par
00086     nbk01->SetSelection(1);\par
00087 \}\par
00088 \par
00089 {\cf18 void} dlgNb01::OnlbxLinksDClick(wxCommandEvent& event)\par
00090 \{\par
00091     std::string zcat = {\cf17 event}.GetString().ToStdString();\par
00092 {\cf20 //    rdb.listLinks(std::stoi(zcat.substr(0, zcat.find(" "))));}\par
00093 std::string cmd = {\cf22 ""};\par
00094     rdb.getLink(std::stoi(zcat.substr(0, zcat.find({\cf22 " "}))));\par
00095     {\cf19 if} (rdb.lk3[0].ToStdString().find({\cf22 "http"}) < rdb.lk3[0].length())\par
00096     \{\par
00097         cmd = {\cf22 "/usr/lib/ghostery/Ghostery "} + rdb.lk3[0].ToStdString();\par
00098     \}\par
00099     {\cf19 else}\par
00100     \{\par
00101         cmd = rdb.lk3[0].ToStdString();\par
00102     \}\par
00103     system(cmd.c_str());\par
00104     cmd = cmd;\par
00105 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNb01.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNb01.h}
{\xe \v dlgNb01.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/listbox.h>}\par
{\f2 #include <wx/notebook.h>}\par
{\f2 #include <wx/panel.h>}\par
{\f2 #include <wx/sizer.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgNb01}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNb01.h\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGNB01_H}\par
00002 {\cf21 #define DLGNB01_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgNb01)}\par
00005 {\cf21 #include <wx/dialog.h>}\par
00006 {\cf21 #include <wx/listbox.h>}\par
00007 {\cf21 #include <wx/notebook.h>}\par
00008 {\cf21 #include <wx/panel.h>}\par
00009 {\cf21 #include <wx/sizer.h>}\par
00010 {\cf20 //*)}\par
00011 \par
00012 {\cf17 class }dlgNb01: {\cf17 public} wxDialog\par
00013 \{\par
00014         {\cf17 public}:\par
00015 \par
00016                 dlgNb01(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00017                 {\cf17 virtual} ~dlgNb01();\par
00018                 {\cf18 int} curCat;\par
00019 \par
00020                 {\cf20 //(*Declarations(dlgNb01)}\par
00021                 wxListBox* lbxCats;\par
00022                 wxListBox* lbxLinks;\par
00023                 wxNotebook* nbk01;\par
00024                 wxPanel* Panel1;\par
00025                 wxPanel* Panel2;\par
00026                 {\cf20 //*)}\par
00027 \par
00028         {\cf17 protected}:\par
00029 \par
00030                 {\cf20 //(*Identifiers(dlgNb01)}\par
00031                 {\cf17 static} {\cf17 const} {\cf18 long} ID_LISTBOX1;\par
00032                 {\cf17 static} {\cf17 const} {\cf18 long} ID_PANEL1;\par
00033                 {\cf17 static} {\cf17 const} {\cf18 long} ID_LISTBOX2;\par
00034                 {\cf17 static} {\cf17 const} {\cf18 long} ID_PANEL2;\par
00035                 {\cf17 static} {\cf17 const} {\cf18 long} ID_NOTEBOOK1;\par
00036                 {\cf20 //*)}\par
00037 \par
00038         {\cf17 private}:\par
00039 \par
00040                 {\cf20 //(*Handlers(dlgNb01)}\par
00041                 {\cf18 void} OnlbxCatsSelect(wxCommandEvent& event);\par
00042                 {\cf18 void} OnlbxCatsDClick(wxCommandEvent& event);\par
00043                 {\cf18 void} OnlbxLinksDClick(wxCommandEvent& event);\par
00044                 {\cf20 //*)}\par
00045 \par
00046                 DECLARE_EVENT_TABLE()\par
00047 \};\par
00048 \par
00049 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewCat.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewCat.cpp}
{\xe \v dlgNewCat.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgNewCat.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01} {\b db01}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v db01\:dlgNewCat.cpp}
{\xe \v dlgNewCat.cpp\:db01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b zDB01} db01}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b dlgNewCat.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewCat.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgNewCat.h"}\par
00002 {\cf21 #include "zDB01.h"}\par
00003 \par
00004 zDB01 db01;\par
00005 \par
00006 {\cf20 //(*InternalHeaders(dlgNewCat)}\par
00007 {\cf21 #include <wx/intl.h>}\par
00008 {\cf21 #include <wx/string.h>}\par
00009 {\cf20 //*)}\par
00010 \par
00011 {\cf20 //(*IdInit(dlgNewCat)}\par
00012 {\cf17 const} {\cf18 long} dlgNewCat::ID_STATICTEXT1 = wxNewId();\par
00013 {\cf17 const} {\cf18 long} dlgNewCat::ID_TEXTCTRL1 = wxNewId();\par
00014 {\cf17 const} {\cf18 long} dlgNewCat::ID_STATICTEXT2 = wxNewId();\par
00015 {\cf17 const} {\cf18 long} dlgNewCat::ID_TEXTCTRL2 = wxNewId();\par
00016 {\cf17 const} {\cf18 long} dlgNewCat::ID_BUTTON1 = wxNewId();\par
00017 {\cf17 const} {\cf18 long} dlgNewCat::ID_BUTTON2 = wxNewId();\par
00018 {\cf20 //*)}\par
00019 \par
00020 BEGIN_EVENT_TABLE(dlgNewCat,wxDialog)\par
00021     {\cf20 //(*EventTable(dlgNewCat)}\par
00022     {\cf20 //*)}\par
00023 END_EVENT_TABLE()\par
00024 \par
00025 dlgNewCat::dlgNewCat(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00026 \{\par
00027     {\cf20 //(*Initialize(dlgNewCat)}\par
00028     wxBoxSizer* BoxSizer1;\par
00029     wxBoxSizer* BoxSizer2;\par
00030     wxBoxSizer* BoxSizer3;\par
00031     wxBoxSizer* BoxSizer4;\par
00032 \par
00033     Create(parent, {\cf18 id}, _({\cf22 "Enter New Category"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00034     SetClientSize(wxDefaultSize);\par
00035     Move(wxDefaultPosition);\par
00036     BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00037     BoxSizer2 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00038     BoxSizer3 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00039     lblCat = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT1, _({\cf22 "Category"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT1"}));\par
00040     BoxSizer3->Add(lblCat, 0, wxALL|wxEXPAND, 1);\par
00041     edtCat = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL1, _({\cf22 "Text"}), wxDefaultPosition, wxSize(371,24), 0, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL1"}));\par
00042     BoxSizer3->Add(edtCat, 0, wxALL|wxEXPAND, 1);\par
00043     lblMemo = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT2, _({\cf22 "Memo"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT2"}));\par
00044     BoxSizer3->Add(lblMemo, 0, wxALL|wxEXPAND, 1);\par
00045     edtMemo = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL2, _({\cf22 "Text"}), wxDefaultPosition, wxSize(371,87), wxTE_MULTILINE, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL2"}));\par
00046     BoxSizer3->Add(edtMemo, 0, wxALL|wxEXPAND, 1);\par
00047     BoxSizer4 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00048     btnInsert = {\cf17 new} wxButton({\cf17 this}, ID_BUTTON1, _({\cf22 "Insert"}), wxDefaultPosition, wxSize(217,33), 0, wxDefaultValidator, _T({\cf22 "ID_BUTTON1"}));\par
00049     BoxSizer4->Add(btnInsert, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);\par
00050     btnCancel = {\cf17 new} wxButton({\cf17 this}, ID_BUTTON2, _({\cf22 "Cancel"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_BUTTON2"}));\par
00051     BoxSizer4->Add(btnCancel, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);\par
00052     BoxSizer3->Add(BoxSizer4, 0, wxALL|wxEXPAND, 1);\par
00053     BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00054     BoxSizer1->Add(BoxSizer2, 1, wxALL|wxEXPAND, 5);\par
00055     SetSizer(BoxSizer1);\par
00056     BoxSizer1->Fit({\cf17 this});\par
00057     BoxSizer1->SetSizeHints({\cf17 this});\par
00058 \par
00059     Connect(ID_BUTTON1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&dlgNewCat::OnbtnInsertClick);\par
00060     Connect(ID_BUTTON2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&dlgNewCat::OnbtnCancelClick);\par
00061     {\cf20 //*)}\par
00062 \}\par
00063 \par
00064 dlgNewCat::~dlgNewCat()\par
00065 \{\par
00066     {\cf20 //(*Destroy(dlgNewCat)}\par
00067     {\cf20 //*)}\par
00068 \}\par
00069 \par
00070 \par
00071 {\cf18 void} dlgNewCat::OnbtnInsertClick(wxCommandEvent& event)\par
00072 \{\par
00073     std::string butText = btnInsert->GetLabel().ToStdString();\par
00074     butText = butText;\par
00075     {\cf19 if} (butText == {\cf22 "Insert"})\par
00076     \{\par
00077         std::string cat = db01.fieldToString(edtCat);\par
00078         std::string memo = db01.fieldToString(edtMemo);\par
00079         db01.insertCat(cat, memo);\par
00080         {\cf20 //   db02.insertLink(db02.fieldToString(edtPrim), db02.fieldToString(edtLinkName), db02.fieldToString(edtLink), db02.fieldToString(edtDetDes));}\par
00081 \par
00082     \}\par
00083     {\cf19 else}\par
00084     \{\par
00085         db01.editCat({\cf22 ""},db01.fieldToString(edtCat), db01.fieldToString(edtMemo));\par
00086         db01.listCategories({\cf17 false});\par
00087 \par
00088     \}\par
00089 \par
00090 {\cf20 //INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]')}\par
00091     EndModal(wxID_OK);\par
00092 \par
00093 \}\par
00094 \par
00095 {\cf18 void} dlgNewCat::OnbtnCancelClick(wxCommandEvent& event)\par
00096 \{\par
00097     EndModal(wxID_CANCEL);\par
00098 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewCat.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewCat.h}
{\xe \v dlgNewCat.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/button.h>}\par
{\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/sizer.h>}\par
{\f2 #include <wx/stattext.h>}\par
{\f2 #include <wx/textctrl.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgNewCat}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewCat.h\par \pard\plain 
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGNEWCAT_H}\par
00002 {\cf21 #define DLGNEWCAT_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgNewCat)}\par
00005 {\cf21 #include <wx/button.h>}\par
00006 {\cf21 #include <wx/dialog.h>}\par
00007 {\cf21 #include <wx/sizer.h>}\par
00008 {\cf21 #include <wx/stattext.h>}\par
00009 {\cf21 #include <wx/textctrl.h>}\par
00010 {\cf20 //*)}\par
00011 \par
00012 {\cf17 class }dlgNewCat: {\cf17 public} wxDialog\par
00013 \{\par
00014         {\cf17 public}:\par
00015 \par
00016                 dlgNewCat(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00017                 {\cf17 virtual} ~dlgNewCat();\par
00018 \par
00019                 {\cf20 //(*Declarations(dlgNewCat)}\par
00020                 wxButton* btnCancel;\par
00021                 wxButton* btnInsert;\par
00022                 wxStaticText* lblCat;\par
00023                 wxStaticText* lblMemo;\par
00024                 wxTextCtrl* edtCat;\par
00025                 wxTextCtrl* edtMemo;\par
00026                 {\cf20 //*)}\par
00027 \par
00028         {\cf17 protected}:\par
00029 \par
00030                 {\cf20 //(*Identifiers(dlgNewCat)}\par
00031                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT1;\par
00032                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL1;\par
00033                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT2;\par
00034                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL2;\par
00035                 {\cf17 static} {\cf17 const} {\cf18 long} ID_BUTTON1;\par
00036                 {\cf17 static} {\cf17 const} {\cf18 long} ID_BUTTON2;\par
00037                 {\cf20 //*)}\par
00038 \par
00039         {\cf17 private}:\par
00040 \par
00041                 {\cf20 //(*Handlers(dlgNewCat)}\par
00042                 {\cf18 void} OnbtnInsertClick(wxCommandEvent& event);\par
00043                 {\cf18 void} OnbtnCancelClick(wxCommandEvent& event);\par
00044                 {\cf20 //*)}\par
00045 \par
00046                 DECLARE_EVENT_TABLE()\par
00047 \};\par
00048 \par
00049 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewLink.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewLink.cpp}
{\xe \v dlgNewLink.cpp}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgNewLink.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include "curlStuff.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b zDB01} {\b db02}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b curlStuff} {\b cs01}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v cs01\:dlgNewLink.cpp}
{\xe \v dlgNewLink.cpp\:cs01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b curlStuff} cs01}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b dlgNewLink.cpp}.}\par
}
{\xe \v db02\:dlgNewLink.cpp}
{\xe \v dlgNewLink.cpp\:db02}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b zDB01} db02}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 5} of file {\b dlgNewLink.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewLink.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgNewLink.h"}\par
00002 {\cf21 #include "zDB01.h"}\par
00003 {\cf21 #include "curlStuff.h"}\par
00004 \par
00005 zDB01 db02;\par
00006 curlStuff cs01;\par
00007 \par
00008 {\cf20 //(*InternalHeaders(dlgNewLink)}\par
00009 {\cf21 #include <wx/intl.h>}\par
00010 {\cf21 #include <wx/string.h>}\par
00011 {\cf20 //*)}\par
00012 \par
00013 {\cf20 //(*IdInit(dlgNewLink)}\par
00014 {\cf17 const} {\cf18 long} dlgNewLink::ID_STATICTEXT1 = wxNewId();\par
00015 {\cf17 const} {\cf18 long} dlgNewLink::ID_TEXTCTRL1 = wxNewId();\par
00016 {\cf17 const} {\cf18 long} dlgNewLink::ID_STATICTEXT2 = wxNewId();\par
00017 {\cf17 const} {\cf18 long} dlgNewLink::ID_TEXTCTRL2 = wxNewId();\par
00018 {\cf17 const} {\cf18 long} dlgNewLink::ID_STATICTEXT3 = wxNewId();\par
00019 {\cf17 const} {\cf18 long} dlgNewLink::ID_TEXTCTRL3 = wxNewId();\par
00020 {\cf17 const} {\cf18 long} dlgNewLink::ID_STATICTEXT4 = wxNewId();\par
00021 {\cf17 const} {\cf18 long} dlgNewLink::ID_TEXTCTRL4 = wxNewId();\par
00022 {\cf17 const} {\cf18 long} dlgNewLink::ID_BUTTON1 = wxNewId();\par
00023 {\cf17 const} {\cf18 long} dlgNewLink::ID_BUTTON2 = wxNewId();\par
00024 {\cf20 //*)}\par
00025 \par
00026 BEGIN_EVENT_TABLE(dlgNewLink,wxDialog)\par
00027     {\cf20 //(*EventTable(dlgNewLink)}\par
00028     {\cf20 //*)}\par
00029 END_EVENT_TABLE()\par
00030 \par
00031 dlgNewLink::dlgNewLink(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00032 \{\par
00033     {\cf20 //(*Initialize(dlgNewLink)}\par
00034     wxBoxSizer* BoxSizer1;\par
00035     wxBoxSizer* BoxSizer2;\par
00036     wxBoxSizer* BoxSizer3;\par
00037     wxBoxSizer* BoxSizer4;\par
00038 \par
00039     Create(parent, {\cf18 id}, _({\cf22 "Insert New Link"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00040     SetClientSize(wxDefaultSize);\par
00041     Move(wxDefaultPosition);\par
00042     BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00043     BoxSizer2 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00044     BoxSizer3 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00045     lblidlk1 = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT1, _({\cf22 "Master Key"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT1"}));\par
00046     BoxSizer3->Add(lblidlk1, 0, wxALL|wxEXPAND, 1);\par
00047     edtPrim = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL1, wxEmptyString, wxDefaultPosition, wxSize(331,24), wxTE_READONLY, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL1"}));\par
00048     BoxSizer3->Add(edtPrim, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00049     lnlLinkName = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT2, _({\cf22 "Link Name"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT2"}));\par
00050     BoxSizer3->Add(lnlLinkName, 0, wxALL|wxEXPAND, 1);\par
00051     edtLinkName = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL2, _({\cf22 "Text"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL2"}));\par
00052     BoxSizer3->Add(edtLinkName, 0, wxALL|wxEXPAND, 1);\par
00053     lblLink = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT3, _({\cf22 "Link"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT3"}));\par
00054     BoxSizer3->Add(lblLink, 0, wxALL|wxEXPAND, 1);\par
00055     edtLink = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL3, _({\cf22 "Text"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL3"}));\par
00056     BoxSizer3->Add(edtLink, 0, wxALL|wxEXPAND, 1);\par
00057     lblDet = {\cf17 new} wxStaticText({\cf17 this}, ID_STATICTEXT4, _({\cf22 "Detailed Description"}), wxDefaultPosition, wxDefaultSize, 0, _T({\cf22 "ID_STATICTEXT4"}));\par
00058     BoxSizer3->Add(lblDet, 0, wxALL|wxEXPAND, 1);\par
00059     edtDetDes = {\cf17 new} wxTextCtrl({\cf17 this}, ID_TEXTCTRL4, _({\cf22 "Note."}), wxDefaultPosition, wxSize(339,112), wxTE_MULTILINE, wxDefaultValidator, _T({\cf22 "ID_TEXTCTRL4"}));\par
00060     BoxSizer3->Add(edtDetDes, 0, wxALL|wxEXPAND, 1);\par
00061     BoxSizer4 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00062     btnInset = {\cf17 new} wxButton({\cf17 this}, ID_BUTTON1, _({\cf22 "Insert"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_BUTTON1"}));\par
00063     BoxSizer4->Add(btnInset, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00064     btnCancel = {\cf17 new} wxButton({\cf17 this}, ID_BUTTON2, _({\cf22 "Cancel"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_BUTTON2"}));\par
00065     BoxSizer4->Add(btnCancel, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00066     BoxSizer3->Add(BoxSizer4, 0, wxALL|wxEXPAND, 1);\par
00067     BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00068     BoxSizer1->Add(BoxSizer2, 1, wxALL|wxEXPAND, 5);\par
00069     SetSizer(BoxSizer1);\par
00070     BoxSizer1->Fit({\cf17 this});\par
00071     BoxSizer1->SetSizeHints({\cf17 this});\par
00072 \par
00073     Connect(ID_BUTTON1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&dlgNewLink::OnbtnInsetClick);\par
00074     Connect(ID_BUTTON2,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&dlgNewLink::OnbtnCancelClick);\par
00075     {\cf20 //*)}\par
00076 \par
00078     db02.initField(db02.strIdlk1,edtPrim);\par
00079     {\cf20 //if db02.}\par
00080     db02.initField(cs01.clipUrl(), edtLinkName);\par
00081     db02.initField(cs01.cbc, edtLink);\par
00082 \}\par
00083 \par
00084 dlgNewLink::~dlgNewLink()\par
00085 \{\par
00086     {\cf20 //(*Destroy(dlgNewLink)}\par
00087     {\cf20 //*)}\par
00088 \}\par
00089 \par
00090 \par
00091 {\cf18 void} dlgNewLink::OnbtnInsetClick(wxCommandEvent& event)\par
00092 \{\par
00093     db02.insertLink(db02.fieldToString(edtPrim), db02.fieldToString(edtLinkName), db02.fieldToString(edtLink), db02.fieldToString(edtDetDes));\par
00094     EndModal(wxID_OK);\par
00095 \}\par
00096 \par
00097 {\cf18 void} dlgNewLink::OnbtnCancelClick(wxCommandEvent& event)\par
00098 \{\par
00099     EndModal(wxID_CANCEL);\par
00100 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewLink.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgNewLink.h}
{\xe \v dlgNewLink.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/button.h>}\par
{\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/sizer.h>}\par
{\f2 #include <wx/stattext.h>}\par
{\f2 #include <wx/textctrl.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgNewLink}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgNewLink.h\par \pard\plain 
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGNEWLINK_H}\par
00002 {\cf21 #define DLGNEWLINK_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgNewLink)}\par
00005 {\cf21 #include <wx/button.h>}\par
00006 {\cf21 #include <wx/dialog.h>}\par
00007 {\cf21 #include <wx/sizer.h>}\par
00008 {\cf21 #include <wx/stattext.h>}\par
00009 {\cf21 #include <wx/textctrl.h>}\par
00010 {\cf20 //*)}\par
00011 \par
00012 {\cf17 class }dlgNewLink: {\cf17 public} wxDialog\par
00013 \{\par
00014         {\cf17 public}:\par
00015 \par
00016                 dlgNewLink(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00017                 {\cf17 virtual} ~dlgNewLink();\par
00018 \par
00019                 {\cf20 //(*Declarations(dlgNewLink)}\par
00020                 wxButton* btnCancel;\par
00021                 wxButton* btnInset;\par
00022                 wxStaticText* lblDet;\par
00023                 wxStaticText* lblLink;\par
00024                 wxStaticText* lblidlk1;\par
00025                 wxStaticText* lnlLinkName;\par
00026                 wxTextCtrl* edtDetDes;\par
00027                 wxTextCtrl* edtLink;\par
00028                 wxTextCtrl* edtLinkName;\par
00029                 wxTextCtrl* edtPrim;\par
00030                 {\cf20 //*)}\par
00031 \par
00032         {\cf17 protected}:\par
00033 \par
00034                 {\cf20 //(*Identifiers(dlgNewLink)}\par
00035                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT1;\par
00036                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL1;\par
00037                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT2;\par
00038                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL2;\par
00039                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT3;\par
00040                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL3;\par
00041                 {\cf17 static} {\cf17 const} {\cf18 long} ID_STATICTEXT4;\par
00042                 {\cf17 static} {\cf17 const} {\cf18 long} ID_TEXTCTRL4;\par
00043                 {\cf17 static} {\cf17 const} {\cf18 long} ID_BUTTON1;\par
00044                 {\cf17 static} {\cf17 const} {\cf18 long} ID_BUTTON2;\par
00045                 {\cf20 //*)}\par
00046 \par
00047         {\cf17 private}:\par
00048 \par
00049                 {\cf20 //(*Handlers(dlgNewLink)}\par
00050                 {\cf18 void} OnbtnInsetClick(wxCommandEvent& event);\par
00051                 {\cf18 void} OnbtnCancelClick(wxCommandEvent& event);\par
00052                 {\cf20 //*)}\par
00053 \par
00054                 DECLARE_EVENT_TABLE()\par
00055 \};\par
00056 \par
00057 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgSelDB.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgSelDB.cpp}
{\xe \v dlgSelDB.cpp}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgSelDB.h"}\par
{\f2 #include "zDB01.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgSelDB.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgSelDB.h"}\par
00002 {\cf21 #include "zDB01.h"}\par
00003 \par
00004 \par
00005 \par
00006 {\cf20 //(*InternalHeaders(dlgSelDB)}\par
00007 {\cf21 #include <wx/intl.h>}\par
00008 {\cf21 #include <wx/string.h>}\par
00009 {\cf20 //*)}\par
00010 \par
00011 {\cf20 //(*IdInit(dlgSelDB)}\par
00012 {\cf17 const} {\cf18 long} dlgSelDB::ID_LISTBOX1 = wxNewId();\par
00013 {\cf20 //*)}\par
00014 \par
00015 BEGIN_EVENT_TABLE(dlgSelDB,wxDialog)\par
00016     {\cf20 //(*EventTable(dlgSelDB)}\par
00017     {\cf20 //*)}\par
00018 END_EVENT_TABLE()\par
00019 dlgSelDB::dlgSelDB(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00020 \{\par
00021     {\cf20 //(*Initialize(dlgSelDB)}\par
00022     wxBoxSizer* BoxSizer1;\par
00023     wxBoxSizer* BoxSizer2;\par
00024     wxBoxSizer* BoxSizer3;\par
00025 \par
00026     Create(parent, {\cf18 id}, _({\cf22 "Select Database"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00027     SetClientSize(wxSize(-1,-1));\par
00028     Move(wxDefaultPosition);\par
00029     SetMaxSize(wxSize(-1,-1));\par
00030     BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00031     BoxSizer2 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00032     BoxSizer3 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00033     lbxDbNames = {\cf17 new} wxListBox({\cf17 this}, ID_LISTBOX1, wxDefaultPosition, wxSize(358,256), 0, 0, 0, wxDefaultValidator, _T({\cf22 "ID_LISTBOX1"}));\par
00034     BoxSizer3->Add(lbxDbNames, 1, wxALL|wxEXPAND, 5);\par
00035     BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00036     BoxSizer1->Add(BoxSizer2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00037     SetSizer(BoxSizer1);\par
00038     SetSizer(BoxSizer1);\par
00039     Layout();\par
00040 \par
00041     Connect(ID_LISTBOX1,wxEVT_COMMAND_LISTBOX_DOUBLECLICKED,(wxObjectEventFunction)&dlgSelDB::OnlbxDbNamesDClick);\par
00042     {\cf20 //*)}\par
00043 \}\par
00044 \par
00045 dlgSelDB::~dlgSelDB()\par
00046 \{\par
00047     {\cf20 //(*Destroy(dlgSelDB)}\par
00048     {\cf20 //*)}\par
00049 \}\par
00050 \par
00051 \par
00052 {\cf18 void} dlgSelDB::OnlbxDbNamesDClick(wxCommandEvent& event)\par
00053 \{\par
00054     buf = lbxDbNames->GetStringSelection().ToStdString();\par
00055     EndModal(wxID_OK);\par
00056 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgSelDB.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgSelDB.h}
{\xe \v dlgSelDB.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/listbox.h>}\par
{\f2 #include <wx/sizer.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgSelDB}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgSelDB.h\par \pard\plain 
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGSELDB_H}\par
00002 {\cf21 #define DLGSELDB_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgSelDB)}\par
00005 {\cf21 #include <wx/dialog.h>}\par
00006 {\cf21 #include <wx/listbox.h>}\par
00007 {\cf21 #include <wx/sizer.h>}\par
00008 {\cf20 //*)}\par
00009 \par
00010 {\cf17 class }dlgSelDB: {\cf17 public} wxDialog\par
00011 \{\par
00012         {\cf17 public}:\par
00013 \par
00014                 dlgSelDB(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00015                 {\cf17 virtual} ~dlgSelDB();\par
00016 {\cf20 //              wxString db;}\par
00017                 std::string buf;\par
00018 \par
00019                 {\cf20 //(*Declarations(dlgSelDB)}\par
00020                 wxListBox* lbxDbNames;\par
00021                 {\cf20 //*)}\par
00022 \par
00023         {\cf17 protected}:\par
00024 \par
00025                 {\cf20 //(*Identifiers(dlgSelDB)}\par
00026                 {\cf17 static} {\cf17 const} {\cf18 long} ID_LISTBOX1;\par
00027                 {\cf20 //*)}\par
00028 \par
00029         {\cf17 private}:\par
00030 \par
00031                 {\cf20 //(*Handlers(dlgSelDB)}\par
00032                 {\cf18 void} OnlbxDbNamesDClick(wxCommandEvent& event);\par
00033                 {\cf20 //*)}\par
00034 \par
00035                 DECLARE_EVENT_TABLE()\par
00036 \};\par
00037 \par
00038 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgXqt2.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v dlgXqt2.cpp}
{\xe \v dlgXqt2.cpp}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "dlgXqt2.h"}\par
{\f2 #include <wx/intl.h>}\par
{\f2 #include <wx/string.h>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgXqt2.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "dlgXqt2.h"}\par
00002 \par
00003 {\cf20 //(*InternalHeaders(dlgXqt2)}\par
00004 {\cf21 #include <wx/intl.h>}\par
00005 {\cf21 #include <wx/string.h>}\par
00006 {\cf20 //*)}\par
00007 \par
00008 {\cf20 //(*IdInit(dlgXqt2)}\par
00009 {\cf17 const} {\cf18 long} dlgXqt2::ID_RADIOBOX1 = wxNewId();\par
00010 {\cf17 const} {\cf18 long} dlgXqt2::ID_BUTTON1 = wxNewId();\par
00011 {\cf20 //*)}\par
00012 \par
00013 BEGIN_EVENT_TABLE(dlgXqt2,wxDialog)\par
00014         {\cf20 //(*EventTable(dlgXqt2)}\par
00015         {\cf20 //*)}\par
00016 END_EVENT_TABLE()\par
00017 \par
00018 dlgXqt2::dlgXqt2(wxWindow* parent,wxWindowID {\cf18 id},const wxPoint& pos,const wxSize& size)\par
00019 \{\par
00020         {\cf20 //(*Initialize(dlgXqt2)}\par
00021         wxBoxSizer* BoxSizer1;\par
00022         wxBoxSizer* BoxSizer2;\par
00023         wxBoxSizer* BoxSizer3;\par
00024 \par
00025         Create(parent, {\cf18 id}, _({\cf22 "Select Document"}), wxDefaultPosition, wxDefaultSize, wxDEFAULT_DIALOG_STYLE|wxSYSTEM_MENU|wxRESIZE_BORDER, _T({\cf22 "id"}));\par
00026         SetClientSize(wxDefaultSize);\par
00027         Move(wxDefaultPosition);\par
00028         BoxSizer1 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00029         BoxSizer2 = {\cf17 new} wxBoxSizer(wxHORIZONTAL);\par
00030         BoxSizer3 = {\cf17 new} wxBoxSizer(wxVERTICAL);\par
00031         wxString __wxRadioBoxChoices_1[4] =\par
00032         \{\par
00033                 _({\cf22 "Web"}),\par
00034                 _({\cf22 "PDF"}),\par
00035                 _({\cf22 "Document"}),\par
00036                 _({\cf22 "Executable"})\par
00037         \};\par
00038         rbtRadBut = {\cf17 new} wxRadioBox({\cf17 this}, ID_RADIOBOX1, _({\cf22 "Process To Acomodate"}), wxDefaultPosition, wxSize(304,52), 4, __wxRadioBoxChoices_1, 1, 0, wxDefaultValidator, _T({\cf22 "ID_RADIOBOX1"}));\par
00039         BoxSizer3->Add(rbtRadBut, 1, wxALL|wxEXPAND, 5);\par
00040         butCancel = {\cf17 new} wxButton({\cf17 this}, ID_BUTTON1, _({\cf22 "Cancel"}), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T({\cf22 "ID_BUTTON1"}));\par
00041         BoxSizer3->Add(butCancel, 0, wxALL|wxEXPAND, 1);\par
00042         BoxSizer2->Add(BoxSizer3, 1, wxALL|wxEXPAND, 5);\par
00043         BoxSizer1->Add(BoxSizer2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);\par
00044         SetSizer(BoxSizer1);\par
00045         BoxSizer1->Fit({\cf17 this});\par
00046         BoxSizer1->SetSizeHints({\cf17 this});\par
00047 \par
00048         Connect(ID_RADIOBOX1,wxEVT_COMMAND_RADIOBOX_SELECTED,(wxObjectEventFunction)&dlgXqt2::OnrbtRadButSelect);\par
00049         Connect(ID_BUTTON1,wxEVT_COMMAND_BUTTON_CLICKED,(wxObjectEventFunction)&dlgXqt2::OnbutCancelClick);\par
00050         {\cf20 //*)}\par
00051 \}\par
00052 \par
00053 dlgXqt2::~dlgXqt2()\par
00054 \{\par
00055         {\cf20 //(*Destroy(dlgXqt2)}\par
00056         {\cf20 //*)}\par
00057 \}\par
00058 \par
00059 {\cf18 void} dlgXqt2::OnbutCancelClick(wxCommandEvent& event)\par
00060 \{\par
00061     isel = -1;\par
00062     EndModal(wxID_CANCEL);\par
00063 \}\par
00064 \par
00065 {\cf18 void} dlgXqt2::OnrbtRadButSelect(wxCommandEvent& event)\par
00066 \{\par
00067     isel = {\cf17 event}.GetSelection();\par
00068     EndModal(wxID_OK);\par
00069 \}\par
00070 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgXqt2.h File Reference\par \pard\plain 
{\tc\tcl2 \v dlgXqt2.h}
{\xe \v dlgXqt2.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <wx/button.h>}\par
{\f2 #include <wx/dialog.h>}\par
{\f2 #include <wx/radiobox.h>}\par
{\f2 #include <wx/sizer.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dlgXqt2}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dlgXqt2.h\par \pard\plain 
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef DLGXQT2_H}\par
00002 {\cf21 #define DLGXQT2_H}\par
00003 \par
00004 {\cf20 //(*Headers(dlgXqt2)}\par
00005 {\cf21 #include <wx/button.h>}\par
00006 {\cf21 #include <wx/dialog.h>}\par
00007 {\cf21 #include <wx/radiobox.h>}\par
00008 {\cf21 #include <wx/sizer.h>}\par
00009 {\cf20 //*)}\par
00010 \par
00011 {\cf17 class }dlgXqt2: {\cf17 public} wxDialog\par
00012 \{\par
00013 {\cf17 public}:\par
00014 \par
00015     dlgXqt2(wxWindow* parent,wxWindowID {\cf18 id}=wxID_ANY,{\cf17 const} wxPoint& pos=wxDefaultPosition,{\cf17 const} wxSize& size=wxDefaultSize);\par
00016     {\cf17 virtual} ~dlgXqt2();\par
00017     {\cf18 int} isel;\par
00018 \par
00019 \par
00020     {\cf20 //(*Declarations(dlgXqt2)}\par
00021     wxButton* butCancel;\par
00022     wxRadioBox* rbtRadBut;\par
00023     {\cf20 //*)}\par
00024 \par
00025 {\cf17 protected}:\par
00026 \par
00027     {\cf20 //(*Identifiers(dlgXqt2)}\par
00028     {\cf17 static} {\cf17 const} {\cf18 long} ID_RADIOBOX1;\par
00029     {\cf17 static} {\cf17 const} {\cf18 long} ID_BUTTON1;\par
00030     {\cf20 //*)}\par
00031 \par
00032 {\cf17 private}:\par
00033 \par
00034     {\cf20 //(*Handlers(dlgXqt2)}\par
00035     {\cf20 //*)}\par
00036 \par
00037     DECLARE_EVENT_TABLE()\par
00038     void OnbutCancelClick(wxCommandEvent& event);\par
00039     {\cf18 void} OnrbtRadButSelect(wxCommandEvent& event);\par
00040 \};\par
00041 \par
00042 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zDB01.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v zDB01.cpp}
{\xe \v zDB01.cpp}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "zDB01.h"}\par
{\f2 #include <mysql++.h>}\par
{\f2 #include <wx/msgdlg.h>}\par
{\f2 #include "dlgSelDB.h"}\par
{\f2 #include "dlgDe01.h"}\par
{\f2 #include "dlgNb01.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zDB01.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "zDB01.h"}\par
00002 {\cf21 #include <mysql++.h>}\par
00003 {\cf21 #include <wx/msgdlg.h>}\par
00004 {\cf21 #include "dlgSelDB.h"}\par
00005 {\cf21 #include "dlgDe01.h"}\par
00006 {\cf21 #include "dlgNb01.h"}\par
00007 \par
00008 {\cf17 using namespace }mysqlpp;\par
00009 {\cf17 using namespace }std;\par
00010 \par
00011 zDB01::zDB01()\par
00012 \{\par
00013     {\cf20 //ctor}\par
00014 \}\par
00015 \par
00016 zDB01::~zDB01()\par
00017 \{\par
00018     {\cf20 //dtor}\par
00019 \}\par
00020 \par
00021 {\cf18 void} zDB01::listDatabases()\par
00022 \{\par
00023 {\cf20 //    dlgSelDB dlb;}\par
00024     dbn.Clear();\par
00025     {\cf19 try}\par
00026     \{\par
00027         Connection conn({\cf17 true});\par
00028         conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00029         Query query = conn.query();\par
00030 {\cf20 //       query << "SELECT * FROM lk1 LIMIT 10";}\par
00031         query << {\cf22 "show DATABASES"};\par
00032         StoreQueryResult ares = query.store();\par
00033         {\cf19 for} ({\cf18 size_t} i = 0; i < ares.num_rows(); i++)\par
00034         \{\par
00035             {\cf18 string} buf = std::string(ares[i][{\cf22 "Database"}]);\par
00036 \par
00037 \par
00038 {\cf20 //            wxMessageBox(buf);}\par
00039             wxString tbuf = buf;\par
00040             dbn.Insert(tbuf,0,1);\par
00041 {\cf20 //            lbxDbName.InsertItems(ares[i]["Database"]);}\par
00042 {\cf20 //            cout << "Name: " << ares[i]["idlk1"] << " - Address: " << ares[i]["cat"] << endl;}\par
00043 \par
00044         \}\par
00045 \par
00046         {\cf19 if} (ares.num_rows() == 0)\par
00047         \{\par
00048             wxMessageBox({\cf22 "No Data Detected!!"}, {\cf22 "Zero Query Results"}, wxICON_HAND);\par
00049         \}\par
00050     \}\par
00051     {\cf19 catch} (BadQuery er)     {\cf20 // handle any connection or}\par
00052     \{\par
00053         {\cf20 // query errors that may come up}\par
00054         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00055         wxMessageBox({\cf22 "Connection Error!"}, {\cf22 "Connection Error Detected"}, wxICON_ERROR | wxICON_HAND);\par
00056     \}\par
00057     {\cf19 catch} ({\cf17 const} BadConversion& er)\par
00058     \{\par
00059         {\cf20 // Handle bad conversions}\par
00060         cerr << {\cf22 "Conversion error: "} << er.what() << endl <<\par
00061              {\cf22 "\\tretrieved data size: "} << er.retrieved <<\par
00062              {\cf22 ", actual size: "} << er.actual_size << endl;\par
00063         wxMessageBox({\cf22 "Conversino Error!"}, {\cf22 "Conversin Error Detected"}, wxICON_HAND);\par
00064     \}\par
00065     {\cf19 catch} ({\cf17 const} Exception& er)\par
00066     \{\par
00067         {\cf20 // Catch-all for any other MySQL++ exceptions}\par
00068         {\cf18 string} buf = er.what();\par
00069         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00070         wxMessageBox({\cf22 "Miscalleanous Error!"}, {\cf22 "Other Error Detected"}, wxICON_HAND);\par
00071     \}\par
00072 \}\par
00073 \par
00074 {\cf18 void} zDB01::listCategories({\cf18 bool} idPrime)\par
00075 \{\par
00076 {\cf20 //    dlgSelDB dlb;}\par
00077     lk1.Clear();\par
00078     {\cf19 try}\par
00079     \{\par
00080         Connection conn({\cf17 true});\par
00081         conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00082         Query query = conn.query();\par
00083         {\cf19 if} (idPrime)\par
00084         \{\par
00085             query << {\cf22 "select idlk1, cat from lk1 order by idlk1"};\par
00086         \}\par
00087         {\cf19 else}\par
00088         \{\par
00089            query << {\cf22 "select idlk1, cat from lk1 order by cat"};\par
00090         \}\par
00091         StoreQueryResult ares = query.store();\par
00092         zres = ares;\par
00093 \par
00094         {\cf19 for} ({\cf18 size_t} i = 0; i < ares.num_rows(); i++)\par
00095         \{\par
00096 {\cf20 //            string sbuf = std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]);}\par
00097             lk1.Add(std::string(ares[i][{\cf22 "idlk1"}]) + {\cf22 " "} + std::string(ares[i][{\cf22 "cat"}]));\par
00098 \par
00099 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]));}\par
00100 {\cf20 //           wxString tbuf = buf;}\par
00101 {\cf20 //           dbn.Insert(tbuf,0,1);}\par
00102 {\cf20 //            lbxDbName.InsertItems(ares[i]["Database"]);}\par
00103 {\cf20 //            cout << "Name: " << ares[i]["idlk1"] << " - Address: " << ares[i]["cat"] << endl;}\par
00104 \par
00105         \}\par
00106 \par
00107         {\cf19 if} (ares.num_rows() == 0)\par
00108         \{\par
00109             wxMessageBox({\cf22 "No Data Detected!!"}, {\cf22 "Zero Query Results"}, wxICON_HAND);\par
00110         \}\par
00111     \}\par
00112     {\cf19 catch} (BadQuery er)     {\cf20 // handle any connection or}\par
00113     \{\par
00114         {\cf20 // query errors that may come up}\par
00115         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00116         wxMessageBox({\cf22 "Connection Error!"}, {\cf22 "Connection Error Detected"}, wxICON_ERROR | wxICON_HAND);\par
00117     \}\par
00118     {\cf19 catch} ({\cf17 const} BadConversion& er)\par
00119     \{\par
00120         {\cf20 // Handle bad conversions}\par
00121         cerr << {\cf22 "Conversion error: "} << er.what() << endl <<\par
00122              {\cf22 "\\tretrieved data size: "} << er.retrieved <<\par
00123              {\cf22 ", actual size: "} << er.actual_size << endl;\par
00124         wxMessageBox({\cf22 "Conversino Error!"}, {\cf22 "Conversin Error Detected"}, wxICON_HAND);\par
00125     \}\par
00126     {\cf19 catch} ({\cf17 const} Exception& er)\par
00127     \{\par
00128         {\cf20 // Catch-all for any other MySQL++ exceptions}\par
00129         {\cf18 string} buf = er.what();\par
00130         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00131         wxMessageBox({\cf22 "Miscalleanous Error!"}, {\cf22 "Other Error Detected"}, wxICON_HAND);\par
00132     \}\par
00133 \}\par
00134 \par
00135 {\cf18 void} zDB01::listLinks({\cf18 int} curCat, {\cf18 bool} dRID)\par
00136 \{\par
00137 {\cf20 //    dlgSelDB dlb;}\par
00138     lk2.Clear();\par
00139     {\cf19 try}\par
00140     \{\par
00141         Connection conn({\cf17 true});\par
00142         conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00143         Query query = conn.query();\par
00144         {\cf20 //SELECT * FROM `lk2` WHERE idlk1 = 20 order by lkn}\par
00145 {\cf20 //        query << "select * from lk2 where idlk1 = 140 order by lkn";}\par
00146         {\cf19 if} (dRID)\par
00147         \{\par
00148             query << {\cf22 "select * from lk2 where idlk1 = "} << to_string(curCat) << {\cf22 " order by idlk2"};\par
00149         \}\par
00150         {\cf19 else}\par
00151         \{\par
00152             query << {\cf22 "select * from lk2 where idlk1 = "} << to_string(curCat) << {\cf22 " order by lkn"};\par
00153         \}\par
00154         StoreQueryResult ares = query.store();\par
00155         zres = ares;\par
00156         {\cf19 for} ({\cf18 size_t} i = 0; i < ares.num_rows(); i++)\par
00157         \{\par
00158             {\cf18 string} sbuf = std::string(ares[i][{\cf22 "idlk2"}]) + {\cf22 " "} + std::string(ares[i][{\cf22 "lkn"}]);\par
00159             lk2.Add(std::string(ares[i][{\cf22 "idlk2"}]) + {\cf22 " "} + std::string(ares[i][{\cf22 "lkn"}]));\par
00160 \par
00161 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]));}\par
00162 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk2"]) + " " + std::string(ares[i]["lkn"]));}\par
00163 {\cf20 //           wxString tbuf = buf;}\par
00164 {\cf20 //           dbn.Insert(tbuf,0,1);}\par
00165 {\cf20 //            lbxDbName.InsertItems(ares[i]["Database"]);}\par
00166 {\cf20 //            cout << "Name: " << ares[i]["idlk1"] << " - Address: " << ares[i]["cat"] << endl;}\par
00167 \par
00168         \}\par
00169 \par
00170         {\cf19 if} (ares.num_rows() == 0)\par
00171         \{\par
00172             wxMessageBox({\cf22 "No Data Detected!!"}, {\cf22 "Zero Query Results"}, wxICON_HAND);\par
00173         \}\par
00174     \}\par
00175     {\cf19 catch} (BadQuery er)     {\cf20 // handle any connection or}\par
00176     \{\par
00177         {\cf20 // query errors that may come up}\par
00178         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00179         wxMessageBox({\cf22 "Connection Error!"}, {\cf22 "Connection Error Detected"}, wxICON_ERROR | wxICON_HAND);\par
00180     \}\par
00181     {\cf19 catch} ({\cf17 const} BadConversion& er)\par
00182     \{\par
00183         {\cf20 // Handle bad conversions}\par
00184         cerr << {\cf22 "Conversion error: "} << er.what() << endl <<\par
00185              {\cf22 "\\tretrieved data size: "} << er.retrieved <<\par
00186              {\cf22 ", actual size: "} << er.actual_size << endl;\par
00187         wxMessageBox({\cf22 "Conversino Error!"}, {\cf22 "Conversin Error Detected"}, wxICON_HAND);\par
00188     \}\par
00189     {\cf19 catch} ({\cf17 const} Exception& er)\par
00190     \{\par
00191         {\cf20 // Catch-all for any other MySQL++ exceptions}\par
00192         {\cf18 string} buf = er.what();\par
00193         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00194         wxMessageBox({\cf22 "Miscalleanous Error!"}, {\cf22 "Other Error Detected"}, wxICON_HAND);\par
00195     \}\par
00196 \}\par
00197 \par
00198 {\cf18 void} zDB01::getLink({\cf18 int} curCat)\par
00199 \{\par
00200 {\cf20 //    dlgSelDB dlb;}\par
00201     lk3.Clear();\par
00202     {\cf19 try}\par
00203     \{\par
00204         Connection conn({\cf17 true});\par
00205         conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00206         Query query = conn.query();\par
00207         {\cf20 //SELECT * FROM `lk2` WHERE idlk1 = 20 order by lkn}\par
00208 {\cf20 //        query << "select * from lk2 where idlk1 = 140 order by lkn";}\par
00209         query << {\cf22 "select * from lk2 where idlk2 = "} << to_string(curCat) << {\cf22 " order by lkn"};\par
00210         StoreQueryResult ares = query.store();\par
00211         zres = ares;\par
00212         {\cf19 for} ({\cf18 size_t} i = 0; i < ares.num_rows(); i++)\par
00213         \{\par
00214             {\cf18 string} sbuf = std::string(ares[i][{\cf22 "idlk2"}]) + {\cf22 " "} + std::string(ares[i][{\cf22 "lkn"}]);\par
00215             lk3.Add(std::string(ares[i][{\cf22 "lnk"}]));\par
00216 \par
00217 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]));}\par
00218 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk2"]) + " " + std::string(ares[i]["lkn"]));}\par
00219 {\cf20 //           wxString tbuf = buf;}\par
00220 {\cf20 //           dbn.Insert(tbuf,0,1);}\par
00221 {\cf20 //            lbxDbName.InsertItems(ares[i]["Database"]);}\par
00222 {\cf20 //            cout << "Name: " << ares[i]["idlk1"] << " - Address: " << ares[i]["cat"] << endl;}\par
00223 \par
00224         \}\par
00225         {\cf18 size_t} rcount = ares.num_rows();\par
00226 \par
00227         {\cf19 if} ((rcount == 1)  and (insertMode == {\cf17 true}))\par
00228         \{\par
00229             wxMessageBox({\cf22 "No Data Detected!!"}, {\cf22 "Zero Query Results"}, wxICON_HAND);\par
00230         \}\par
00231     \}\par
00232     {\cf19 catch} (BadQuery er)     {\cf20 // handle any connection or}\par
00233     \{\par
00234         {\cf20 // query errors that may come up}\par
00235         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00236         wxMessageBox({\cf22 "Connection Error!"}, {\cf22 "Connection Error Detected"}, wxICON_ERROR | wxICON_HAND);\par
00237     \}\par
00238     {\cf19 catch} ({\cf17 const} BadConversion& er)\par
00239     \{\par
00240         {\cf20 // Handle bad conversions}\par
00241         cerr << {\cf22 "Conversion error: "} << er.what() << endl <<\par
00242              {\cf22 "\\tretrieved data size: "} << er.retrieved <<\par
00243              {\cf22 ", actual size: "} << er.actual_size << endl;\par
00244         wxMessageBox({\cf22 "Conversino Error!"}, {\cf22 "Conversin Error Detected"}, wxICON_HAND);\par
00245     \}\par
00246     {\cf19 catch} ({\cf17 const} Exception& er)\par
00247     \{\par
00248         {\cf20 // Catch-all for any other MySQL++ exceptions}\par
00249         {\cf18 string} buf = er.what();\par
00250         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00251         wxMessageBox({\cf22 "Miscalleanous Error!"}, {\cf22 "Other Error Detected"}, wxICON_HAND);\par
00252     \}\par
00253 \}\par
00254 \par
00255 {\cf18 void} zDB01::selDB()\par
00256 \{\par
00257     dlgSelDB dlg(NULL,wxID_ANY);\par
00258     dbn.Sort();\par
00259     dlg.lbxDbNames->InsertItems(dbn, 0);\par
00260     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00261     \{\par
00262         curDB = dlg.lbxDbNames->GetString(dlg.lbxDbNames->GetSelection());\par
00263     \}\par
00264 \par
00265 \}\par
00266 \par
00267 {\cf18 void} zDB01::initField({\cf18 string} inputValue, wxTextCtrl * field)\par
00268 \{\par
00269     wxString dv = inputValue;\par
00270     field->Clear();\par
00271     field->SetEditable({\cf17 true});\par
00272     field->ChangeValue(dv);\par
00273 \}\par
00274 \par
00275 {\cf18 string} zDB01::fieldToString(wxTextCtrl * field)\par
00276 \{\par
00277     {\cf18 string} rstr;\par
00278     wxString s1 = field->GetValue();\par
00279     rstr = s1.ToStdString();\par
00280     {\cf19 return} rstr;\par
00281 \}\par
00282 \par
00283 {\cf18 void} zDB01::de01()\par
00284 \{\par
00285     dlgDe01 dlg(NULL, wxID_ANY);\par
00286     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00287     \{\par
00288 \par
00289     \}\par
00290 \par
00291 \}\par
00292 \par
00293 {\cf18 void} zDB01::nb01()\par
00294 \{\par
00295     dlgNb01 dlg(NULL, wxID_ANY);\par
00296     dlg.lbxCats->InsertItems(lk1, 0);\par
00297     {\cf19 if} (dlg.ShowModal() == wxID_OK)\par
00298     \{\par
00299 \par
00300     \}\par
00301 \par
00302 \}\par
00303 {\cf18 void} zDB01::listLk1Lk2()\par
00304 \{\par
00305 {\cf20 //    dlgSelDB dlb;}\par
00306     lk1.Clear();\par
00307     {\cf19 try}\par
00308     \{\par
00309         Connection conn({\cf17 true});\par
00310         conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00311         Query query = conn.query();\par
00312         query << {\cf22 "select * from lk1, lk2 where lk2.idlk1 = lk1.idlk1 order by lk1.cat, lk2.lkn"};\par
00313         zres = query.store();\par
00314         {\cf19 for} ({\cf18 size_t} i = 0; i < zres.num_rows(); i++)\par
00315         \{\par
00316 {\cf20 //            string sbuf = std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]);}\par
00317 {\cf20 //            lk1.Add(std::string(zres[i]["idlk1"]) + " " + std::string(zres[i]["cat"]));}\par
00318 \par
00319 {\cf20 //            wxMessageBox(std::string(ares[i]["idlk1"]) + " " + std::string(ares[i]["cat"]));}\par
00320 {\cf20 //           wxString tbuf = buf;}\par
00321 {\cf20 //           dbn.Insert(tbuf,0,1);}\par
00322 {\cf20 //            lbxDbName.InsertItems(ares[i]["Database"]);}\par
00323 {\cf20 //            cout << "Name: " << ares[i]["idlk1"] << " - Address: " << ares[i]["cat"] << endl;}\par
00324 \par
00325         \}\par
00326 \par
00327         {\cf19 if} (zres.num_rows() == 0)\par
00328         \{\par
00329             wxMessageBox({\cf22 "No Data Detected!!"}, {\cf22 "Zero Query Results"}, wxICON_HAND);\par
00330         \}\par
00331     \}\par
00332     {\cf19 catch} (BadQuery er)     {\cf20 // handle any connection or}\par
00333     \{\par
00334         {\cf20 // query errors that may come up}\par
00335         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00336         wxMessageBox({\cf22 "Connection Error!"}, {\cf22 "Connection Error Detected"}, wxICON_ERROR | wxICON_HAND);\par
00337     \}\par
00338     {\cf19 catch} ({\cf17 const} BadConversion& er)\par
00339     \{\par
00340         {\cf20 // Handle bad conversions}\par
00341         cerr << {\cf22 "Conversion error: "} << er.what() << endl <<\par
00342              {\cf22 "\\tretrieved data size: "} << er.retrieved <<\par
00343              {\cf22 ", actual size: "} << er.actual_size << endl;\par
00344         wxMessageBox({\cf22 "Conversino Error!"}, {\cf22 "Conversin Error Detected"}, wxICON_HAND);\par
00345     \}\par
00346     {\cf19 catch} ({\cf17 const} Exception& er)\par
00347     \{\par
00348         {\cf20 // Catch-all for any other MySQL++ exceptions}\par
00349         {\cf18 string} buf = er.what();\par
00350         cerr << {\cf22 "Error: "} << er.what() << endl;\par
00351         wxMessageBox({\cf22 "Miscalleanous Error!"}, {\cf22 "Other Error Detected"}, wxICON_HAND);\par
00352     \}\par
00353 \}\par
00354 \par
00355 {\cf18 void} zDB01::insertCat(std::string cat, std::string memo)\par
00356 \{\par
00357     Connection conn({\cf17 false});\par
00358     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00359     Query query1 = conn.query();\par
00360     {\cf20 //INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]')}\par
00361     std::string qstr = {\cf22 "INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ( "};\par
00362     qstr = qstr  +  {\cf22 "0"} + {\cf22 ","}+ {\cf22 "\\""} + cat + {\cf22 "\\",\\""} + memo + {\cf22 "\\")"};\par
00363 {\cf20 //       query1 << "INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ( " <<  "0" << "," << cat << "," << memo << ")";}\par
00364     query1.exec(qstr);\par
00365 \par
00366 \}\par
00367 {\cf18 void} zDB01::editCat(std::string idlk1, std::string cat, std::string memo)\par
00368 \{\par
00369     Connection conn({\cf17 false});\par
00370     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00371     Query query1 = conn.query();\par
00372     {\cf20 //INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]')}\par
00373     {\cf20 //UPDATE `lk1` SET `idlk1`='[value-1]',`cat`='[value-2]',`ddes`='[value-3]' WHERE 1}\par
00374     std::string qstr = {\cf22 "UPDATE  `lk1` set `cat`= \\""} + cat +{\cf22 "\\", `ddes` =  \\""} + memo + {\cf22 "\\""} + {\cf22 " where `idlk1` = "} +  strIdlk1;\par
00375 {\cf20 //    qstr = qstr  +  "0" + ","+ "\\"" + cat + "\\",\\"" + memo + "\\")";}\par
00376 {\cf20 //       query1 << "INSERT INTO `lk1`(`idlk1`, `cat`, `ddes`) VALUES ( " <<  "0" << "," << cat << "," << memo << ")";}\par
00377     query1.exec(qstr);\par
00378 \par
00379 \}\par
00380 \par
00381 {\cf18 void} zDB01::insertLink(std::string idlk1, std::string lkn, std::string lnk, std::string ddes)\par
00382 \{\par
00383     Connection conn({\cf17 false});\par
00384     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00385     Query query1 = conn.query();\par
00386     {\cf20 //INSERT INTO `lk2`(`idlk2`, `idlk1`, `lkn`, `lnk`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]','[value-4]','[value-5]')}\par
00387     std::string qstr = {\cf22 "INSERT INTO `lk2`(`idlk2`, `idlk1`, `lkn`, `lnk`, `ddes`) VALUES ("};\par
00388     qstr = qstr  +  {\cf22 "0"} + {\cf22 ","} + {\cf22 "\\""} + idlk1 + {\cf22 "\\",\\""} + lkn + {\cf22 "\\",\\""} + lnk + {\cf22 "\\",\\""} + ddes +{\cf22 "\\")"};\par
00389     query1.exec(qstr);\par
00390 \par
00391 \}\par
00392 {\cf18 void} zDB01::DeleteLink(std::string delId)\par
00393 \{\par
00394     Connection conn({\cf17 false});\par
00395     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00396     Query query1 = conn.query();\par
00397 {\cf20 //DELETE FROM `lk2` WHERE idlk2 = 712}\par
00398     {\cf20 //INSERT INTO `lk2`(`idlk2`, `idlk1`, `lkn`, `lnk`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]','[value-4]','[value-5]')}\par
00399     std::string qstr = {\cf22 "DELETE FROM `lk2` WHERE idlk2 = "} + delId;\par
00400     query1.exec(qstr);\par
00401 \par
00402 \}\par
00403 {\cf18 void} zDB01::editLink(std::string delId, std::string idkl2, std::string ilk, std::string lnk, std::string ddes, std::string idlk1)\par
00404 \par
00405 \{\par
00406     Connection conn({\cf17 false});\par
00407     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00408     Query query1 = conn.query();\par
00409 {\cf20 //DELETE FROM `lk2` WHERE idlk2 = 712}\par
00410     {\cf20 //INSERT INTO `lk2`(`idlk2`, `idlk1`, `lkn`, `lnk`, `ddes`) VALUES ('[value-1]','[value-2]','[value-3]','[value-4]','[value-5]')}\par
00411     {\cf20 //UPDATE `lk2` SET `idlk2`='[value-1]',`idlk1`='[value-2]',`lkn`='[value-3]',`lnk`='[value-4]',`ddes`='[value-5]' WHERE 1}\par
00412 \par
00413 \par
00414 {\cf20 //    std::string qstr = "DELETE FROM `lk2` WHERE idlk2 = " + delId;}\par
00415 {\cf20 //    std::string qstr = "UPDATE `lk2` SET `lkn` = \\" " + lnk + "\\"" + ", `ddes`= \\"" +  ddes + "\\"" + " WHERE idlk2 = " + delId ;}\par
00416 {\cf20 //    std::string qstr = "UPDATE `lk2` SET `idlk1` =  \\"" + delId + "\\", " +  "`lkn` = \\" " + lnk + "\\"" + ", `ddes`= \\"" +  ddes + "\\"" + " WHERE idlk2 = " + delId ;}\par
00417     std::string qstr = {\cf22 "UPDATE `lk2` SET `idlk1` =  \\""} + idlk1 + {\cf22 "\\", "} +  {\cf22 "`lkn` = \\" "} + lnk + {\cf22 "\\""} + {\cf22 ", `ddes`= \\""} +  ddes + {\cf22 "\\""} + {\cf22 " WHERE idlk2 = "} + delId ;\par
00418     query1.exec(qstr);\par
00419 \par
00420 \}\par
00421 \par
00422 {\cf18 void} zDB01::getCat()\par
00423 \{\par
00424     Connection conn({\cf17 true});\par
00425     conn.connect(database.c_str(), server.c_str(), user.c_str(), password.c_str());\par
00426     Query query1 = conn.query();\par
00427 {\cf20 //    std::string qstr = "UPDATE `lk2` SET `lkn` = \\" " + lnk + "\\"" + ", `ddes`= \\"" +  ddes + "\\"" + " WHERE idlk2 = " + delId ;}\par
00428     query1 << {\cf22 "select * from lk1 where idlk1 =  \\""} + strIdlk1 + {\cf22 "\\""};\par
00429     StoreQueryResult ares = query1.store();\par
00430     zres = ares;\par
00431     {\cf20 //  query1.exec(qstr);}\par
00432 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zDB01.h File Reference\par \pard\plain 
{\tc\tcl2 \v zDB01.h}
{\xe \v zDB01.h}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <mysql++.h>}\par
{\f2 #include <wx/arrstr.h>}\par
{\f2 #include <wx/textctrl.h>}\par
{\f2 #include <result.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b zDB01}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
zDB01.h\par \pard\plain 
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Go to the documentation of this file.\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef ZDB01_H}\par
00002 {\cf21 #define ZDB01_H}\par
00003 {\cf21 #include <mysql++.h>}\par
00004 {\cf21 #include <wx/arrstr.h>}\par
00005 {\cf21 #include <wx/textctrl.h>}\par
00006 {\cf21 #include <result.h>}\par
00007 \par
00008 \par
00009 {\cf17 class }zDB01\par
00010 \{\par
00011 {\cf17 public}:\par
00012     zDB01();\par
00013     {\cf17 virtual} ~zDB01();\par
00014     {\cf18 void} listDatabases();\par
00015     wxArrayString dbn, lk1, lk2, lk3;\par
00016     {\cf18 void} selDB();\par
00017     wxString db;\par
00018     std::string curDB;\par
00019     {\cf18 void} de01();\par
00020     {\cf18 void} initField(std::string inputValue, wxTextCtrl * field);\par
00021     std::string fieldToString(wxTextCtrl * field);\par
00022     {\cf18 void} nb01();\par
00023     {\cf18 void} listCategories({\cf18 bool} idPrim);\par
00024     {\cf18 void} listLinks({\cf18 int} curCat, {\cf18 bool} dRID);\par
00025     {\cf18 void} getLink({\cf18 int} curCat);\par
00026     {\cf18 void} listLk1Lk2();\par
00027     mysqlpp::StoreQueryResult zres;\par
00028 {\cf20 //    mysqlpp::StoreQueryResult ares;}\par
00029     {\cf18 void} insertCat(std::string cat, std::string memo);\par
00030     {\cf18 void} insertLink(std::string idlk1, std::string lkn, std::string lnk, std::string ddes);\par
00031     {\cf18 void} DeleteLink(std::string delId);\par
00032     {\cf18 void} editLink(std::string delId, std::string idkl2, std::string ilk, std::string lnk, std::string ddes, std::string idlk1);\par
00033     std::string strIdlk1 = {\cf22 "43"};\par
00034     {\cf18 bool} insertMode;\par
00035     {\cf18 void} editCat(std::string idlk1, std::string cat, std::string memo);\par
00036     std::string database = {\cf22 "bcswebtools"};\par
00037     std::string server = {\cf22 "localhost"};\par
00038     std::string user = {\cf22 "bcs"};\par
00039     std::string password = {\cf22 "Peace007!amb"};\par
00040     {\cf18 void} getCat();\par
00041 \par
00042 {\cf17 protected}:\par
00043 \par
00044 {\cf17 private}:\par
00045 \};\par
00046 \par
00047 {\cf21 #endif }{\cf20 // ZDB01_H}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
